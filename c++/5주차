비주얼 코드 ??  이클립스, 아톰



프론트 리엑트 ( 자바스크립트기반 ),  boorstrap, 
백엔드 nodejs, nestjs, spring, jsp, PHP, 



// 소스파일의 View에서 작성 
// 화면 출력 담당 
// 앞에 L 을 써주어야 문자 입력 가능 
BOOL Cday1006View::PreCreateWindow(CREATESTRUCT& cs)
{
	// TODO: CREATESTRUCT cs를 수정하여 여기에서
	//  Window 클래스 또는 스타일을 수정합니다.
  // 창에 글을 쓸수 있게 해줌 
	cs.lpszClass = L"edit";
	return CView::PreCreateWindow(cs);
}

<==============================================================>
<==============================================================>

// 문자 입력 
void Cday1006View::OnDraw(CDC* pDC)
{
	Cday1006Doc* pDoc = GetDocument();
	ASSERT_VALID(pDoc);
	if (!pDoc)
		return;
	// 문자입력 
  // TextOutW ( x좌표, y좌표, 문자 입력 ) 
	pDC->TextOutW(20,20, L"소프트웨어");
	// TODO: 여기에 원시 데이터에 대한 그리기 코드를 추가합니다.
}

<==============================================================>
<==============================================================>

// 사각형 만들기 
// 사각형 안에 글 쓰기 
// 사각형은 CRect 클래스로 만든다. 
// CRect 의 객체를 만들때 바로 사각형의 좌표를 적을 수 있다. 
void Cday1006View::OnDraw(CDC* pDC)
{
	Cday1006Doc* pDoc = GetDocument();
	ASSERT_VALID(pDoc);
	if (!pDoc)
		return;
	// 문자입력 
	pDC->TextOutW(20,20, L"소프트웨어");
	CRect t, rt(100,200,400,500);
	t.left = 200;
	//pDC->DrawText(L"안녕하세요", &rt, DT_LEFT|DT_VCENTER);
	pDC->DrawText(L"안녕하세요\n MFC입니다.", &rt, DT_CENTER|DT_VCENTER);
	pDC->DrawText(L"안녕하세요\n Hello", &rt, DT_RIGHT|DT_VCENTER);
	pDC->DrawText(CString(_T("안녕")), &rt, DT_BOTTOM | DT_VCENTER);
	// TODO: 여기에 원시 데이터에 대한 그리기 코드를 추가합니다.
}

<==============================================================>
<==============================================================>

// 색 바꾸기 및 글자에 하이라이트 넣기 
// SetTextColor   : 글자 색 바꾸기 
// SetBkColor     : 글자 하이라이트 넣기 ( 하이라이트 색 바꾸기 가능 )
void Cday1006View::OnDraw(CDC* pDC)
{
	Cday1006Doc* pDoc = GetDocument();
	ASSERT_VALID(pDoc);
	if (!pDoc)
		return;
	// 글자 색 바꾸기 
	pDC->SetTextColor(RGB(255, 0, 0));
	pDC->SetTextColor(RGB(255, 255, 0));

	// 문자입력 
	pDC->TextOutW(20,20, L"소프트웨어");
	CRect t, rt(100,200,400,500);
	t.left = 200;

	// 글자 하이라이트 색 바꾸기 
	pDC->SetBkColor(RGB(0, 255, 255));

	//pDC->DrawText(L"안녕하세요", &rt, DT_LEFT|DT_VCENTER);
	pDC->DrawText(L"안녕하세요\n MFC입니다.", &rt, DT_CENTER|DT_VCENTER);
	pDC->DrawText(L"안녕하세요\n Hello", &rt, DT_RIGHT|DT_VCENTER);
	pDC->DrawText(CString(_T("안녕")), &rt, DT_BOTTOM | DT_VCENTER);

	// 메시지 박스는 MFC standard 를 사용해야 결과가 한번만 나옴 
	MessageBox(L"선택하세요", L"확인");

	// TODO: 여기에 원시 데이터에 대한 그리기 코드를 추가합니다.
}

// 함수 및 변수 생성  
보기 -> 클래스 뷰 -> view 클릭 -> 속성창에서 보고서 -> 내가 원하는 함수 클릭 -> 함수가 자동 생성
클래스 뷰 -> view -> 우클릭 추가 -> 변수 또는 함수 추가 가능 ( 추가시 전역으로 생성이 됨 ) 



// day1006View.cpp: Cday1006View 클래스의 구현
//

#include "pch.h"
#include "framework.h"
// SHARED_HANDLERS는 미리 보기, 축소판 그림 및 검색 필터 처리기를 구현하는 ATL 프로젝트에서 정의할 수 있으며
// 해당 프로젝트와 문서 코드를 공유하도록 해 줍니다.
#ifndef SHARED_HANDLERS
#include "day1006.h"
#endif

#include "day1006Doc.h"
#include "day1006View.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// Cday1006View

IMPLEMENT_DYNCREATE(Cday1006View, CView)

BEGIN_MESSAGE_MAP(Cday1006View, CView)
	ON_WM_CHAR()
	ON_WM_LBUTTONUP()
	ON_WM_LBUTTONDOWN()
	ON_WM_RBUTTONDOWN()
	ON_WM_LBUTTONUP()
	ON_WM_MOUSEMOVE()
END_MESSAGE_MAP()

// Cday1006View 생성/소멸

Cday1006View::Cday1006View() noexcept
{
	// TODO: 여기에 생성 코드를 추가합니다.

}

Cday1006View::~Cday1006View()
{
}

BOOL Cday1006View::PreCreateWindow(CREATESTRUCT& cs)
{
	// TODO: CREATESTRUCT cs를 수정하여 여기에서
	//  Window 클래스 또는 스타일을 수정합니다.
	 cs.lpszClass = L"edit";
	return CView::PreCreateWindow(cs);
}

// Cday1006View 그리기

void Cday1006View::OnDraw(CDC* pDC)
{
	Cday1006Doc* pDoc = GetDocument();
	ASSERT_VALID(pDoc);
	if (!pDoc)
		return;
	/*
	// 글자 색 바꾸기 
	pDC->SetTextColor(RGB(255, 0, 0));
	pDC->SetTextColor(RGB(255, 255, 0));

	// 문자입력 
	pDC->TextOutW(20,20, L"소프트웨어");
	CRect t, rt(100,200,400,500);
	t.left = 200;

	// 글자 하이라이트 색 바꾸기 
	pDC->SetBkColor(RGB(0, 255, 255));

	//pDC->DrawText(L"안녕하세요", &rt, DT_LEFT|DT_VCENTER);
	pDC->DrawText(L"안녕하세요\n MFC입니다.", &rt, DT_CENTER|DT_VCENTER);
	pDC->DrawText(L"안녕하세요\n Hello", &rt, DT_RIGHT|DT_VCENTER);
	pDC->DrawText(CString(_T("안녕")), &rt, DT_BOTTOM | DT_VCENTER);

	// 메시지 박스는 MFC standard 를 사용해야 결과가 한번만 나옴 
	//MessageBox(L"선택하세요", L"확인");
	*/
	//pDC->TextOutW(100, 200, m_str, m_str.GetLength());
	//pDC->MoveTo(m_ptStart);
	//pDC->LineTo(m_ptEnd);

	//pDC->Ellipse(20, 20, 500, 300);
	//pDC->Rectangle(250, 300, 800, 500);
	 
	CPen pen, * oldPen;
	pen.CreatePen(PS_SOLID, 1, m_PenColor);
	oldPen = pDC->SelectObject(&pen);
	pDC->Rectangle(m_ptLeftop.x, m_ptLeftop.y, m_ptRightBottom.x, m_ptRightBottom.y);
	pDC->SelectObject(oldPen);
	pen.DeleteObject();
	// TODO: 여기에 원시 데이터에 대한 그리기 코드를 추가합니다.
}


// Cday1006View 진단

#ifdef _DEBUG
void Cday1006View::AssertValid() const
{
	CView::AssertValid();
}

void Cday1006View::Dump(CDumpContext& dc) const
{
	CView::Dump(dc);
}

Cday1006Doc* Cday1006View::GetDocument() const // 디버그되지 않은 버전은 인라인으로 지정됩니다.
{
	ASSERT(m_pDocument->IsKindOf(RUNTIME_CLASS(Cday1006Doc)));
	return (Cday1006Doc*)m_pDocument;
}
#endif //_DEBUG


// Cday1006View 메시지 처리기


void Cday1006View::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags)
{
	// TODO: 여기에 메시지 처리기 코드를 추가 및/또는 기본값을 호출합니다.
	// 글자 쓰기
	// 글을 지워서 다시 시작 위치로 이동 
	// 글은 지워지지 않지만 위에 덮어 씌우기 가능 
	//if (nChar == VK_BACK)
	//	m_str.Delete(m_str.GetLength() - 1);
	//else 		
	//	m_str.AppendChar(nChar);
	// (기존에 있는 것을 지움) 그전에 것을 지운다 
	Invalidate();

	switch(nChar) {
		case 'r':
			m_PenColor = RGB(255, 0, 0);
			break;
		case 'g':
			m_PenColor = RGB(0, 255, 0);
			break;
		case 'b':
			m_PenColor = RGB(0, 0, 255);
			break;

	}
	CView::OnChar(nChar, nRepCnt, nFlags);
}


void Cday1006View::OnLButtonDown(UINT nFlags, CPoint point)
{
	// TODO: 여기에 메시지 처리기 코드를 추가 및/또는 기본값을 호출합니다.

	//m_ptStart = point;

	m_ptLeftop = point;
	CView::OnLButtonDown(nFlags, point);
}


void Cday1006View::OnLButtonUp(UINT nFlags, CPoint point)
{
	// TODO: 여기에 메시지 처리기 코드를 추가 및/또는 기본값을 호출합니다.
	//m_ptEnd = point;
	m_ptRightBottom = point;
	Invalidate();
	CView::OnLButtonUp(nFlags, point);
}


void Cday1006View::OnMouseMove(UINT nFlags, CPoint point)
{
	// TODO: 여기에 메시지 처리기 코드를 추가 및/또는 기본값을 호출합니다.
	if (nFlags & MK_LBUTTON) {
		//m_ptEnd = point;
		m_ptRightBottom = point;
		Invalidate();
	}
	CView::OnMouseMove(nFlags, point);
}



// day1006View.h: Cday1006View 클래스의 인터페이스
//

#pragma once


class Cday1006View : public CView
{
protected: // serialization에서만 만들어집니다.
	Cday1006View() noexcept;
	DECLARE_DYNCREATE(Cday1006View)

// 특성입니다.
public:
	Cday1006Doc* GetDocument() const;

// 작업입니다.
public:

// 재정의입니다.
public:
	virtual void OnDraw(CDC* pDC);  // 이 뷰를 그리기 위해 재정의되었습니다.
	virtual BOOL PreCreateWindow(CREATESTRUCT& cs);
protected:

// 구현입니다.
public:
	virtual ~Cday1006View();
#ifdef _DEBUG
	virtual void AssertValid() const;
	virtual void Dump(CDumpContext& dc) const;
#endif

protected:

// 생성된 메시지 맵 함수
protected:
	DECLARE_MESSAGE_MAP()
public:
	afx_msg void OnChar(UINT nChar, UINT nRepCnt, UINT nFlags);
	afx_msg void OnLButtonDown(UINT nFlags, CPoint point);
	afx_msg void OnLButtonUp(UINT nFlags, CPoint point);
	afx_msg void OnMouseMove(UINT nFlags, CPoint point);
	//CString m_str;
	//CPoint m_ptStart;
	//CPoint m_ptEnd;

	COLORREF m_PenColor;
	CPoint m_ptLeftop;
	CPoint m_ptRightBottom;
};

#ifndef _DEBUG  // day1006View.cpp의 디버그 버전
inline Cday1006Doc* Cday1006View::GetDocument() const
   { return reinterpret_cast<Cday1006Doc*>(m_pDocument); }
#endif

