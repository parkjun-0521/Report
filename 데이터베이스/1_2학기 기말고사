- 테이블 스페이스 생성 및 계정 생성
- DBA 권한 부여하기 
=======================================================
-- 테이블 스페이스 생성 
CREATE TABLESPACE 테이블스페이스명 DATAFILE
  '테이블 스페이스를 만들 URL' SIZE 100M
  AUTOEXTEND ON NEXT 5M;
  
-- 테이블 스페이스 삭제 
drop tablespace 테이블 이름 

-- 계정 생성       
CREATE USER 아이디 IDENTIFIED BY 비밀번호 
    DEFAULT TABLESPACE 테이블스페이스명
    TEMPORARY TABLESPACE TEMP;

-- 계정 삭제 
drop user 아이디 cascade;

-- DBA 권한 부여 
GRANT DBA TO 아이디

-- 권한 부여 
grant 권한 to { 사용자 | role | .. }

-- 권한 취소 
revoke 권한 from 사용자 | role 

-- DBA 권한 삭제 
revoke DBA from 아이디 
=======================================================

- 데이터 추가 
insert into 테이블 이름 ( 속성리스트 ) 
values ( 값 리스트 ) 

insert into 테이블 이름 
select * from 추가하고싶은 데이터가 있는 테이블 이름 

=>> 추가하고 싶은 데이터가 있는 테이블의 모든 값이 테이블에 추가됨 

값을 추가해도 영구적으로 반영되는 것이 아님 

-- 값을 영구적으로 저장하는 방법 (commit;)
commit을 해야 값이 영구적으로 반영됨 

-- 이전 결과 취소 ( 커밋 이전 것만 취소 가능 ) 
Rollback 명령어 
=> 커밋이 되기 전까지 삽입 작업을 취소 
========================================================

- 데이터 갱신 
update  테이블 이름  
set     속성이름 = 바꿀 값, 속성이름1 = 바꿀값 .... 
where   검색조건 

=> 어떠한 조건을 가진 테이블의 속성을 '바꿀값'으로 바꾸겠다.

-- 다중 행 갱신 
update  테이블 이름 
set     열 이름 1 , 열 이름 2 .. [ ]  = ( select 열 이름 1, 열 이름 2 .. [ ]
                                         from   테이블 이름 
                                         where  조건식 )
where 조건식;

=> select의 다중 행 삽입 가능 
========================================================

- 행 삭제하기 
delete from   테이블 이름 
where 검색조건; 

where 조건에 서브 쿼리를 이용하여 원하는 행을 선택가능 
원하는 행을 선택하여 테이블 행을 삭제 가능 

단, 외래키로 묶여 참조무결성이 발생할 경우는 삭제하지 못한다. 
========================================================

데이터 무결성 
- 도메인 무결성
  - not null 인데 null 값을 입력 할 시 
  - check의 허용된 범위 이외의 값을 입력 시 
  - deta type에 맞지않는 데이터를 입력할 시 
- 개체 무결성 
  - 기본키 제약 조건 ( 유일성 + not null 을 만족 ) 
  - 기본키에 null값을 입력할 시
- 참조 무결성 
  - 외래키 제약조건 
  - 부모 테이블을 참조하는 자식 테이블이 있는데 부모에서 값을 지울 때  ( 자식이 접근할 값이 없을 떄 ) 
  - 부모 테이블을 참조하는 자식 테이블이 있는데 부모에서 값을 갱신할 때
  - 자식에서 값을 갱신하고나 추가하는데 부모테이블에 없는 값을 입력했을 때 
========================================================

- view 
하나 이상의 테이블을 합하여 만든 가상의 테이블

create view 뷰이름 [(열이름)]
as 
select 문 

=> 뷰이름으로 된 가상의 테이블이 생성됨 

- viwe 변경 
create or replace view 뷰이름 
as seleect 문 

- view table 삭제 
drop view 뷰이름 
=========================================================
-- 역할을 만들고 권한을 부여해둠 
-- 그 역할을 사용자에게 부여하면 사용자는 권한을 받은거나 마찬가지 

- 역할 생성 
create role 역할 이름 

- 역할 제거 
drop role 역할이름 

- 역할에 권한 부여 
grant 권한 to 역할이름 

- 역할 권한 회수 
revoke 권한 from 역할이름 

- 사용자에게 역할 부여 
grant 역할이름 to 사용자 
=========================================================

- 테이블 생성 

create table 테이블 이름 
(
  속성이름1 데이터타입 [ not null, null, unique, default 기본값, check (조건) ],
  속성이름2 데이터타입 ..... 
  primary key (속성이름, ...) => 데이터 타입 옆에도 작성 가능,
  constraint 외래키별명 foreign key (속성이름) references 참조하는테이블 ( 참조하는 테이블 속성 ) => 외래키는 여러개 사용가능 
);

-> 데이터 타입 
int     : 정수형 데이터
char    : 고정 문자열 데이터 
varchar : 가변 문자열 데이터
date    : 날짜형 데이터 저장 


- 테이블 구조 수정 
alter table 테이블 이름 [ add, drop column, alter column, add primary key, add/drop 제약이름 ];

add 속성이름 데이터타입    : 속성 추가 
drop column 속성이름      : 열 삭제 
alter column 속성이름 데이터타입 
add primary key 속성이름  : 기본키 추가 
add/drop 제약이름         : 제약사항 추가/제거


- 테이블 삭제하기 
drop table 테이블 이름 [cascade]
=========================================================

- 인덱스
질의 검색시 읽어오는 횟수를 최소화 한다. 

- 인덱스 생성 
create index 인덱스이름 on 테이블이름 (컬럼);


- 인덱스 삭제 
drop index 인덱스이름;

=========================================================
















