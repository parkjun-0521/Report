-- 단일행 함수 
-- 4-1 : 문자타입 함수
-- 예제4-1 : employees 에서 이름은 소문자, 성은 대문자, 
--           이메일의 첫글자는 대문자 나머지는 소문자로 조회하시오. 
select  lower(last_name) as 이름,
        upper(first_name) as 성,
        initcap(email)||'@company.com' as 이메일
from    employees;
---------------------------------------------------

-- 4.2 : 문자열 추출 : substr
-- 예제 4-2 : employees table에서 job_id의 처음 두글자(부서)만 조회하시오.
select distinct substr(job_id, 1, 2)
from employees;

select '홍길동', substr('홍길동', 1,2), substr('홍길동',1,2)
from dual;
---------------------------------------------------

-- 4-3. 문자열 변환 : 특정 문자를 찾아 바꾸기 : replace
-- 예제 4-3 : employees table에서 job_id문자열값중
--           'ACCOUNT'를 'ACCNT'로 변경하시오.
select  job_id, substr(job_id,1,2),
        replace(job_id, 'ACCOUNT', 'ACCNT')
from employees;
---------------------------------------------------
-- 4-4. 문자열변환 : 특정문자 자릿수 채우기 : lpad, rpad
-- 예제 4-4 : employees table에서 first_name을 12자리 문자열 자리로 만들어줌
--           first_name의 값이 12자리보다 작으면 왼쪽부터 '*'를 채움
select  first_name, 
        LPAD(first_name, 12, '*'),
        RPAD(first_name, 12, '*')
from employees;
---------------------------------------------------

-- 4-5. 문자열변환 : 특정 문자 삭제하기 : ltrim, rtrim
-- 예제 4-5 : employees table에서 job_id의 데이터 값에 대해 
--           왼쪽에서 부터 'F'를 만나면 삭제,
--           오른쪽에서부터 'T'를 만나면 삭제
select  job_id,
        ltrim(job_id, 'F'),
        rtrim(job_id, 'T')
from employees;
---------------------------------------------------

-- 예제 4-5-1 : dual 확인
select * from dual;
-- 예제 4-5-2 dual table이용하여 문자열 '   - space -  '에 있는 공백 제거 하시오.
--            문자열 앞에는 'start' 문자열 마지막에는 'end'를 붙여 주세요.
select 'start' || trim('   - space -  ') || 'end'
from dual;
---------------------------------------------------

-- 4-6 :문자열 위치 찾기 :  특정 글자의 위치를 찾기 : INSTR
-- 예제 4-6-1 :  고용일자중 두번째 '/'가 있는 위치를 조회하시오.

select  hire_date,
        -- 정방향 
        instr(hire_date, '/', 1, 2) as 위치1,
        -- 역방향 
        instr(hire_date, '/', -1, 2) as 위치2
from employees;

-- 4.2.2 : 숫자 함수
-- 4.2.1 : 반올림함수 : round
-- 예제 4-6-2 : salary를 월급여가 가정하면
--             salary에서 30일로 나눈 후 (일급)
--             소수점 첫째자리, 소수점둘때자리, 정수첫째자리에서
--             반올림한 값을 조회하시오.
select  salary as 월급,
        salary / 30 as 일급0,
        round(salary / 30, 0) as 일급1,
        round(salary / 30, 1) as 일급2,
        round(salary / 30, -1) as 일급3
from employees;
---------------------------------------------------

-- 4.2.1 : 절삭함수 : trunc
-- 예제 4-7: salary를 월급여가 가정하면
--             salary에서 30일로 나눈 후 (일급)
--             소수점 첫째자리, 소수점둘때자리, 정수첫째자리에서
--             절삭한 값을 조회하시오.
select  salary as 월급,
        salary / 30 as 일급0,
        trunc(salary / 30, 0) as 일급1,
        trunc(salary / 30, 1) as 일급2,
        trunc(salary / 30, -1) as 일급3
from employees;
---------------------------------------------------

-- 4.2.3 : 숫자 올림과 내림 : CEIL , FLOOR
-- 예제 4-7-2 : salary를 월급여가 가정하면
--             salary에서 30일로 나눈 후 (일급)
--             정수로 올림한값과 내림한 값을 구하시오.
select  salary as 월급,
        salary / 30 as 일급0,
        CEIL(salary / 30) as 일급1,
        FLOOR(salary / 30) as 일급2
from employees;
-- 4.2.3 : 숫자 계산하기 : MOD , SIGN , POWER , SQRT  
-- 예제 4-7-3 : DUAL을 이용하여 100을 3으로 나눈 나머지,
--             -100의 부호값, 2의 10승값, 144의 제곱근값을 구하시오.
select  MOD(100,3), 
        SIGN(-100), 
        POWER(2,10), 
        SQRT(144)
from dual;

-- 4.3 : 날짜함수
-- 4.3.1 : 오늘날짜 : SYSDATE
-- 예제 : 4-8 :오늘 날짜와 시간, 오늘 날짜에서 1을 더한 값, 1을 뺀 값, 
--              오늘 날짜에서 2022년 09월 01일을 뺀 값, 
--              오늘 날짜에서 13시간을 더한 값을 출력
select  sysdate,
        sysdate + 1 as "1더하기",
        sysdate - 1 as "1빼기",
        sysdate - to_date('220901') as 날짜빼기,
        sysdate + 13/24 as 시간더하기 
from dual;
---------------------------------------------------
-- 4.3.2 : 날짜 계산 함수: ADD_MONTHS, NEXT_DAY , LAST_DAY
-- 4.3.2.1 : 날짜에 월을 빼거나 더하는 함수 : ADD_MONTHS
-- 예제 4-9 : EMPLOYEES 에서 EMPLOEE_ID가 100과 106 사이인 직원의
--           입사일자(HIRE_DATE)에 3개월을 더한 값, 3개월을 뺀값을 조회하세요.
select  hire_date,
        add_months(hire_date,3),
        add_months(hire_date,-3)
from employees
where employee_id between 100 and 106;
---------------------------------------------------
-- 4.3.2.2 : 돌아오는 요일의 날짜 계산하기 : NEXT_DAY
-- 예제 4-10 : EMPLOYEES 에서 EMPLOEE_ID가 100과 106 사이인 직원의
--           입사일자(HIRE_DATE)에서 가장 가까운 금요일의 날짜가 언제 조회하시오.
select  hire_date,
        next_day(hire_date, '금요일'),
        next_day(hire_date, 6)
from employees
where employee_id between 100 and 106;
---------------------------------------------------

-- 4.3.2.3 : 돌아오는 월의 마지막 날짜 계산하기 : LAST_DAY 
-- 예제 4-11 : EMPLOYEES 에서 EMPLOEE_ID가 100과 106 사이인 직원의
--           입사일자(HIRE_DATE) 기준으로 해당월의 마지막 날짜를 조회하시오.
select  hire_date,
        next_day(hire_date, '금요일'),
        next_day(hire_date, 6),
        last_day(hire_date)
from employees
where employee_id between 100 and 106;
---------------------------------------------------

-- 4.3.3 : 날짜 계산 함수: MONTHS_BETWEEN , ROUND , TRUNC
-- 4.3.3.1 : 두 날짜 사이의 개월 수 계산하기 : MONTHS_BETWEEN 
-- 예제 4-11-2 : EMPLOYEES 에서 DEPARTMWNT_ID가 100인 직원의
--           오늘날짜, 입사일자(HIRE_DATE), 오늘날짜와 HIRE_DATE사이의
--           개월수를 조회하세요.
select  hire_date,
        sysdate,
        months_between(sysdate, hire_date)
from employees
where employee_id between 100 and 106;
---------------------------------------------------
-- 4.3.3.2 : 날짜 반올림/절삭하기 : ROUND, TRUNC 
-- 예제 4-12 : EMPLOYEES 에서 DEPARTMWNT_ID가 100인 직원의
--           입사일자(HIRE_DATE)에 대해 월기준 반올림, 연기준 반올림,
--           월기준절삭, 년기준절삭을 적용하여 조회하세요.
select  hire_date,
        round(hire_date, 'MONTH') as 월기준반올림,
        round(hire_date, 'YEAR') as 년기준반올림,
        TRUNC(hire_date, 'MONTH') as 월기준절삭,
        TRUNC(hire_date, 'YEAR') as 월기준절삭
from employees
where department_id = 100;

---------------------------------------------------
-- 4.4 : 데이터형 변환 함수
-- 4.4.1 : 자동데이터형 변환
-- 예제 : 문자 => 숫자 형변환
--       DUAL table을 이용하여 숫자 1과 문자'2를 더하시오. 

select 1 + '2'
from dual;
---------------------------------------------------
--4.4.2 : 수동데이터 형변환
--4.4.2.1 : 문자열로 변환하는 함수 : TO_CHAR
--예제 : 날짜 => 문자형으로 변환 (날짜 데이터 서식 )
--       DUAL table을 이용하여 날짜형 Format을 적용하여 조회하시오.
-- 조회형태
-- 년도  년도2    월  월2    오늘날짜1 '20220927'날짜
-- 22	2022	09	9월 	20220926	20220927
select  sysdate,
        to_char(sysdate, 'YY') as 년도,
        to_char(sysdate, 'YYYY') as 년도2,
        to_char(sysdate, 'MM') as 월,
        to_char(sysdate, 'MONTH') as 월2,
        to_char(sysdate, 'YYYYMMDD') as 오늘날짜1,
        to_date('20220927', 'YYYYMMDD') as "'20220927'날짜"
from dual;
        
---------------------------------------------------

--예제 : 날짜 => 문자형으로 변환 (시간 데이터 서식 )
-- 조회형태
-- 시간형식1               날짜와 시간조합
-- 01:30:26 오후	          2022/09/26 01:30:26 오후
select  sysdate, 
        to_char(sysdate, 'HH:MI:SS PM'),
        to_char(sysdate, 'YYYY/MM/DD HH:MI:SS PM')
from dual;
---------------------------------------------------

--예제 : 날짜 => 문자형으로 변환 (기타 데이터 서식 )
-- 시간형식1               날짜와 시간조합
-- 01-31-30 오후	          날짜: 2022/09/26 시각: 01:31:30 오후
SELECT TO_CHAR(SYSDATE, 'HH-MI-SS PM') 시간형식,
       TO_CHAR(SYSDATE, ' "날짜:" YYYY/MM/DD "시각:" HH:MI:SS PM' ) 날짜와시각표현
FROM   dual;
---------------------------------------------------
-- 예제 : 숫자 => 문자형으로 변환 (숫자 데이터 서식 )
--       employees테이블에서 사원번호와 다음 출력형식으로 조회하시오.
-- 조회형태
--사번     서식1       서식2       서식3    서식4       서식5      서식6
--108	  12008	  00012008	   $12008  ￦12008	 12008.00	 12,008
select  employee_id as 사번,
        to_char(salary, '99999999') as "서식1",
        to_char(salary, '09999999') as "서식2",
        to_char(salary, '$9999999') as "서식3",
        to_char(salary, 'L9999999') as "서식4",
        to_char(salary, '999999.99') as "서식5",
        to_char(salary, '99,999,999') as "서식6"
from employees;
---------------------------------------------------

--4.4.2.2 : 숫자 데이터로 변환하는 함수 : TO_NUMBER
-- 예 : dual table을 이용하여 '123'을 숫자로 변환하여 123을 더한 결과를 조회하시오.         
select to_number('123') + 123
from dual;
---------------------------------------------------

--4.4.2.3 : 날짜 데이터로 변환하는 함수 : TO_DATE
-- 예 : dual table을 이용하여 '20220927'을 날짜로 변환하여 조회하시오.  
-- 조회형태
--  날짜
--  22/09/27
select to_date('20220927' , 'YYYYMMDD')
from dual;
---------------------------------------------------

-- 4.5 : 일반 함수
-- 4.5.1 : NULL값 처리하기 : NVL
-- 예제 : NULL값 특성
--       employees테이블에서 사원번,  salary, commission_pct를 조회하시오.
--       commission_pct로 정렬
SELECT employee_id, salary,  commission_pct
FROM   employees
ORDER BY commission_pct;









-- 4강 Quiz 
-- Quiz 4-1.
-- 신규프로그램 개발에 성공한 IT관련부서의 연봉을 인상하고자 한다.
-- 다음과 같은 조건을 가진 데이터를 제시된 조회형식으로 조회하시오
-- 조건
--    인상대상 부서 : IT관련부서 : DEPARTMENT_ID => IT: 60, 210:IT SUPPORT, 230:IT HELPDESK
--    연봉인상율 : 12.3%인상하여 정수(반올림)만 표시
--    이름 출력 : 이름 성 (예 : Hunold Alexander) 
-- 조회형식
--    사원번호      이름              부서      직무        연봉       인상된연봉
--      103	    Hunold Alexander	IT	    IT_PROG	    9000    	10107
-------------------------------------------------------------------------------
select  employee_id as 사원번호, 
        first_name|| ' ' ||last_name as 이름, 
        substr(job_id ,1,2) as 부서,
        job_id as 직무,
        salary as 연봉,
        round(salary +(salary * 0.123 ))as 인상된연봉
from employees
where department_id in(60, 210, 230);
-------------------------------------------------------------------------------

-- Quiz 4-2.
-- 사원테이블에서 다음과 같은 조건을 가진 데이터를 제시된 조회형식으로 조회하시오
-- 성(last_name)이 's'로 끝나는 사원의 이름과 업무를 제시된 조회형식에 맞게 출력하고자 한다.
-- 조건
--    이름과 성 : 첫글자만 대문자
--    직무 : 모두 대문자
--    머리글 : "Employees JOBs."로 표현
-- 조회형식
--    Employees JOBs.
--    Abel Ellenis a SA_REP
-------------------------------------------------------------------------------
select  initcap(last_name)|| ' ' ||
        initcap(first_name)|| ' a ' ||
        upper(job_id) as "Employees JOBs."
from employees
where last_name like '%s';
-------------------------------------------------------------------------------

-- Quiz 4-3.
-- 모든 사원의 연봉을 표시하는 연봉ㅇ보고서를 작성하려 한다.
-- 보고서에는 이름(이름 성), 연봉, 수당여부에 따른 연봉을 포함하여 출력하시오.
-- 조건
--   연봉 : 연봉(salary) + 연봉(salary)*성과급지급율(commission_pct)
--   수당여부 : 성과급지급율(commission_pct)이 있으면 "salary+Commition"
--                                      없으면 "salary Only"
-- 조회형식
--    사번    이름           연봉      수당여부
--    144	Vargas Peter	2500	salary Only
--    145	Russell John	19600	salary+Commition
-------------------------------------------------------------------------------
select  employee_id as 사번, 
        first_name|| ' ' ||last_name as 이름, 
        salary as 연봉,
        NVL2(commission_pct, 'salary+Commition', 'salary Only') as 수당여부
from employees;
-------------------------------------------------------------------------------

-- Quiz 4-4.
-- 모든 사원의 이름(이름 성), 입사일, 입사요일을 출력하시오. 
-- 조건
--   주(week)의 시작인 일요일부터 출력되도록 정렬하시오,
-- 조회형식
--    이름        일사일     입사요일
--    Faviet Daniel	2002-08-16	금요일
-------------------------------------------------------------------------------
select  first_name||' '||last_name as 이름,
        '20'||hire_date as 입사일,
        to_char(hire_date,'DAY') as 입사요일
from employees
order by to_char(hire_date - 1,'D') DESC;
