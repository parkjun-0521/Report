-- connect hr/hr1234
-- SQL문 기본 연습
--3.1.2 : 모든 컬럼 조회(*)
--[예제 3-1] : employees의 모든 컬럼 조회
select * 
from employees;
---------------------------------------------------

--3.1.3 : 특정 항목조회
--[예제 3-2] : 직원들의 사원번호와 이름만 출력 
select EMPLOYEE_ID, FIRST_NAME, last_name
from EMPLOYEES;
---------------------------------------------------

--3.1.3 : 조회정렬(order by절 - ASC DESC)
--[예제 3-3]: 직원들의 사원번호와 이름만 출력 (사번 내림차순)
select EMPLOYEE_ID as 사번,
       FIRST_NAME || last_name as 이름
from EMPLOYEES
order by 이름 DESC;
---------------------------------------------------

--3.1.4 : 중복제거(distinct)
select job_id
from EMPLOYEES;

select distinct job_id
from EMPLOYEES;
---------------------------------------------------

--[예제 3-4] : job_id값을 중복제거
select distinct job_id
from EMPLOYEES;
--------------------------------------------------

--3.1.5 : 별칭 사용 (AS)
--[예제 3-5] : 별칭사용
select EMPLOYEE_ID  as 번호
from EMPLOYEES;
---------------------------------------------------


--3.1.6 : 연결연산자 사용 (||)
--[예제 3-6] : 연결연산자 사용하여 이름 출력 
select first_name || last_name as 이름
from employees;

---------------------------------------------------

--[예제 3-7] : 연결연산자 사용하여 이메일 형식 완료(xxxx@company.com) 
-- 문자열은 무조건 ' ' 작은 따옴표 안에 쓴다. 
select email || '@company.com' as 이메일
from employees;
---------------------------------------------------

--3.1.7 : 산술연산 : (), *, /, +, -
--[예제 3-8] : 사원의 사원번호, 급여, 추가급여(급여+500),인하급여(급여-100), 조정급여(급여에 10%추가하여 2로 나눔) 조회 
-- as의 띄어쓰기는 무조건 " " 큰 따옴표로 묶는다
select  employee_id as "사원 번호",
        salary + 500 as 추가급여, 
        salary - 100 as 인하급여,
        (salary + (salary * 0.1))/2 as 조정급여 
from employees;
---------------------------------------------------

--[예제 3-9] : 별명 사용하여 사원의 사원번호, 급여, 추가급여,인하급여, 조정급여 조회 
select  employee_id as "사원 번호",
        salary + 500 as 추가급여, 
        salary - 100 as 인하급여,
        (salary + (salary * 0.1))/2 as 조정급여 
from employees;
---------------------------------------------------

--3.2.1 : where 조건절 사용
--[예제 3-10] : 비교연산자 '=' 사용 : 아이디가 100인 사원정보 조회 
select *
from employees
where employee_id = 100;

select *
from employees
where first_name = 'Steve' and last_name = 'Jobs';
---------------------------------------------------

--[예제 3-11] : first_name이 'David'인 사원정보 조회
select *
from employees
where first_name = 'David';
---------------------------------------------------

--[예제 3-12] 비교연산자 '>=' 사용  : 아이디가 105 이상인 사원정보 조회 
select *
from employees
where employee_id >= 105;
---------------------------------------------------

--3.2.2 : SQL연산자(BETWEEN A AND B, IN, LIKE, IS NULL)
--[예제 3-13] : 비교연산자 사용 : 급여가  10000 이상이고 20000이하인 사원정보조회
select *
from employees
where salary>=10000 and salary<=20000;

--[예제 3-13] : BETWEEN A AND B 연산자 사용 : 급여가  10000 이상이고 20000이하인 사원정보조회
select *
from employees
where salary between 10000 and 20000;
---------------------------------------------------

--[예제 3-14] : 조건연산자 사용 : 급여가 10000, 17000, 24000인 정보조회
select *
from employees
where salary=10000 or salary=17000 or salary = 24000;

--[예제 3-14] : IN연산자 사용 : 급여가 1000, 17000, 240000인 정보조회
select *
from employees
where salary in (10000, 17000, 24000);
---------------------------------------------------

--[예제 3-15] : like 연산자 : job_id가 'AD'로 시작하는 모든 사원정보 조회
select *
from employees
where job_id like 'AD%';
---------------------------------------------------

--[예제 3-16] :  : like 연산자 : job_id가 'AD'로 시작하고 'AD'다음에 문자열이 3자리인 모든 사원정보 조회
select *
from employees
where job_id like 'AD%' and job_id like 'AD___';

---------------------------------------------------

--[예제 3-17] : IS NULL연산자 :  manager_id가 null값인 직원 정보 조회
select *
from employees
where manager_id is null;

select *
from employees
where manager_id is not null;
---------------------------------------------------

--3.2.3 : 논리연산자(AND, OR, NOT)
--[예제 3-18] : 논리연산자(AND, OR, NOT) : salary가 4000을 초과하면서, job_id가 'IT_PROG'인 사원의 정보를 조회
select *
from employees
where salary > 4000 and job_id = 'IT_PROG';
---------------------------------------------------

--[예제 3-19] : 논리연산자(AND, OR, NOT) : salary가 4000을 초과하면서, job_id가 'IT_PROG'이거나 'FI_ACCOUNT' 사원의 정보를 조회
select *
from employees
where salary > 4000 and (job_id = 'IT_PROG' or job_id = 'FI_ACCOUNT');

select *
from employees
where salary > 4000 and (job_id in ('IT_PROG', 'FI_ACCOUNT'));
---------------------------------------------------

--[예제 3-20] : 논리연산자(AND, OR, NOT) : 사원id각 105가 아닌 모든 사원정보 조회
select *
from employees
where employee_id <> 105;

select *
from employees
where not employee_id = 105;
---------------------------------------------------

--[예제 3-21]: 논리연산자(AND, OR, NOT) : manager_id가 NULL이 아닌 모든 사원정보 조회
select *
from employees
where manager_id is not null;
---------------------------------------------------
-- connect as hr/hr1234
-- 4.3 그룹함수와 그룹핑
-- 4.3.1 : 그룹함수(count, sum, avg, min, max)

-- [예제 4-18] : 사원의 행의 수
select count(employee_id)
from employees;

select count(salary)
from employees;
---------------------------------------------------

-- [예제 4-19] : 전체 사원의ㅣ 연봉 합계, 연봉 평균, 계산 평균연봉을 조회하시오.
-- 평균 = 전체급여합계/사원건수

select  sum(salary) as 연봉, 
        avg(salary) as 평균,
        sum(salary)/avg(salary) as 평균연봉
from employees;


---------------------------------------------------

-- [예제 4-20] : 전체사원의 연봉 중 연봉 최대값, 연봉 최솟값, 사원의 이름중 최대문자값, 최소문자값을 조회하시오.
select  max(salary) as "연봉 최대값", 
        min(salary) as "연봉 최소값", 
        max(first_name) as 최대문자값, 
        min(first_name) as 최소문자값
from employees;
---------------------------------------------------

--4.3.2 : group by
-- [예제 4-21]: employee_id가 10이상인 사원들의 job_id(직무)별로 그룹화하여
--             총연봉과 평균연봉을 조회하시오.
--             (조회순서는 job_id별 총연봉 기준 내림차순으로 정렬)  
select  job_id, 
        sum(salary) as 총연봉, 
        avg(salary) as 평균연봉
from employees
where employee_id >= 10
GROUP by job_id;
---------------------------------------------------

-- [예제 4-21-2]: employee_id가 10이상인 사원들의 job_id, manager_id로 그룹화하여
--             총연봉과와 평균연봉을 조회하시오.
--             (조회순서는 총급여 기준 내림차순으로 정렬)  
select  job_id, manager_id,
        sum(salary) as 총연봉, 
        avg(salary) as 평균연봉
from employees
where employee_id >= 10
GROUP by job_id, manager_id
order by 총연봉 DESC; 
---------------------------------------------------

-- 4.3.3 : having
-- [예제 4-22] : emploiyees 테이블에서 employee_id 가 10이상인 사원에 대해
--              job_id별로 그룹화하여 총연봉와 평균연봉를 구하되,
--              job_id별 총연봉이 30000보다 큰 값만 조회하시오.
--              (조회순서는 job_id별 총급여기준 내림차순으로 정렬)
select  job_id,
        sum(salary) as 총연봉,
        avg(salary) as 평균연봉
from employees
where employee_id >= 10
GROUP by job_id
having sum(salary) >= 30000
order by job_id, 총연봉 DESC; 
---------------------------------------------------
-- connect hr/hr1234
-- SQL문 기본 연습 QUIZ
--[Quiz 3-1-1] : Departments의 모든 컬럼 조회
select * 
from departments;
---------------------------------------------------

--[Quiz 3-1-2] : 부서명 조회
select department_name as 부서명
from departments;
---------------------------------------------------

--[Quiz 3-1-3] : 부서명을 중복없이 조회
select distinct department_name as 부서명
from departments;
---------------------------------------------------

--[Quiz 3-1-4]: 부서명 오름차순 정렬
select distinct department_name as 부서명 
from departments
order by 부서명 ASC;
---------------------------------------------------

--[Quiz 3-1-4] : 부서코드80인 부서의 부서코드, 부서명 조회
select department_id as 부서코드, department_name as 부서명 
from departments
where department_id = 80;
---------------------------------------------------

--[Quiz 3-1-5] : IT관련부서 부서코드, 부서명 조회
select department_id as 부서코드, department_name as 부서명 
from departments
where department_name like 'IT%';
---------------------------------------------------

--[Quiz 3-2-1] : Jobs의 모든 컬럼 조회
select *
from jobs;
---------------------------------------------------

--[Quiz 3-2-2] : job title 조회
select job_title
from jobs;
---------------------------------------------------

--[Quiz 3-2-3] : job title 중복없이 조회
select distinct job_title
from jobs;
---------------------------------------------------

--[Quiz 3-2-3]:  job title  내림차순 정렬
select job_title
from jobs
order by job_title DESC;
---------------------------------------------------

--[Quiz 3-2-4] : manager에 속하는 job_id, job_title을 조회하시오.
select job_id, job_title
from jobs
where job_title like '%Manager%';
---------------------------------------------------

--[Quiz 3-3-1] : 다음과 같이 조회되도록 SQL문을 작성하시오
-- 조회형태
--  사원이름            이메일           연봉           성과급율
--  steve jobs   sthob@company.com   1000000$             10%
select  first_name||last_name as 사원이름, 
        email||'@company.com' as 이메일, 
        salary * 12||'$' as 연봉, 
        commission_pct * 100||'%' as 성과급율
from employees
order by 성과급율 DESC;
---------------------------------------------------

--[Quiz 3-3-2] : 성과급율이 입력되어 있는 사원들의 성과급을 
--              다음의 조회형태가 되도록 SQL문을 작성하시오
-- 성과급이 입력 => commission_pct가 null이 아님
-- 성과급 = 연봉*성과급율
-- 조회형태
--  사원이름         이메일           연봉           성과급율             성과급($)
-- steve jobs   sthob@company.com   14000$          .4%                5600$      
select  first_name||last_name as 사원이름, 
        email||'@company.com' as 이메일, 
        salary * 12||'$' as 연봉, 
        commission_pct * 10||'%' as 성과급율,
        (salary * 12)*(commission_pct * 10) as 성과급
from employees
order by 성과급율 DESC;
---------------------------------------------------

-- [Quiz 3-3-3] : IT관련 부서 근무자를 조회하시오.
--IT관련부서 부서코드 : 60, 210, 230
select *
from employees
where department_id in(60, 210, 230);
---------------------------------------------------

-- [Quiz 3-3-4] : manager 직군에 속하는 근무자를 조회하시오.
-- manager직군 직군코드 : 'FI_MGR', 'AC_MGR', 'SA_MAN', 'PU_MAN', 'ST_MAN', 'MK_MAN'
select job_id, job_title
from jobs
where job_id in ('FI_MGR', 'AC_MGR', 'SA_MAN', 'PU_MAN', 'ST_MAN', 'MK_MAN');
---------------------------------------------------



-- [Quiz 3-3-5] : IT관련 부서 근무자의 연봉과 성과급율을 조회하시오. (부서, 사원이름 순 조회)
--IT관련부서 부서코드 : 60, 210, 230
-- 성과급 = 연봉*성과급율
-- 조회형태
--  부서ID     사원이름         이메일           연봉           성과급율             성과급($)
--    60     steve jobs   sthob@company.com   14000$          .4%                5600$      


---------------------------------------------------


-- [Quiz 3-3-6] : manager 직군에 속하는 근무자의 연봉과 성과급율을 조회하시오. (직군ID, 사원이름 순 조회)
-- manager직군 직군코드 : 'FI_MGR', 'AC_MGR', 'SA_MAN', 'PU_MAN', 'ST_MAN', 'MK_MAN'
-- 성과급 = 연봉*성과급율
-- 조회형태
--  직군ID     사원이름         이메일           연봉           성과급율             성과급($)
--  AC_MGR   steve jobs   sthob@company.com   14000$          .4%                5600$      


---------------------------------------------------


-- [Quiz 3-3-7] : manager 직군에 속하면서 성과급율이 NULL 값이 아닌 근무자의 연봉과 성과급율을 조회하시오. (직군ID, 사원이름 순 조회)
-- manager직군 직군코드 : 'FI_MGR', 'AC_MGR', 'SA_MAN', 'PU_MAN', 'ST_MAN', 'MK_MAN'
-- 성과급 = 연봉*성과급율
-- 조회형태
--  직군ID     사원이름         이메일           연봉           성과급율             성과급($)
--  AC_MGR   steve jobs   sthob@company.com   14000$          .4%                5600$      

---------------------------------------------------


-- [Quiz 3-3-8] : manager 직군에 속하면서 성과급율이 NULL 값이 아닌 근무자중 
--                연봉이 12000$이상 15000$이하인 대상자의 연봉과 성과급율을 조회하시오. (직군ID, 사원이름 순 조회)
-- manager직군 직군코드 : 'FI_MGR', 'AC_MGR', 'SA_MAN', 'PU_MAN', 'ST_MAN', 'MK_MAN'
-- 성과급 = 연봉*성과급율
-- 조회형태
--  부서ID     사원이름         이메일           연봉           성과급율             성과급($)
--  AC_MGR   steve jobs   sthob@company.com   14000$          .4%                5600$      

---------------------------------------------------


-- [Quiz 3-3-9] : sales부서내에 manager 직군에 속하면서 성과급율이 NULL 값이 아닌 근무자중 
--                연봉이 12000$이상 15000$이하인 대상자의 연봉과 성과급율을 조회하시오. (직군ID, 사원이름 순 조회)
-- sales부서 부서코드 : 80
-- manager직군 직군코드 : 'FI_MGR', 'AC_MGR', 'SA_MAN', 'PU_MAN', 'ST_MAN', 'MK_MAN'
-- 성과급 = 연봉*성과급율
-- 조회형태
--  부서ID     사원이름         이메일           연봉           성과급율             성과급($)
--   AC_MGR   steve jobs   sthob@company.com   14000$          .4%                5600$      


---------------------------------------------------


-- [Quiz 3-4-1] 사원내역에서 부서별 사원수, 총연봉, 평균연봉, 최대연봉, 최소연봉을 조회하시오.
--              (조회순서는 부서 기준 내림차순으로 정렬) 
-- 조회형태
--  부서ID  사원수    총연봉         평균연봉    최대연봉   최소연봉
--   80      34     304500          8955      14000      6100 


---------------------------------------------------



-- [Quiz 3-4-2] 사원내역에서 부서코드가 null이 아닌 사원 대상으로
--              부서별 사원수, 총연봉, 평균연봉, 최대연봉, 최소연봉을 조회하시오.
--              (조회순서는 부서 기준 내림차순으로 정렬) 
-- 조회형태
--  부서ID  사원수    총연봉         평균연봉    최대연봉   최소연봉
--   80      34     304500          8955      14000      6100 


---------------------------------------------------



-- [Quiz 3-4-3] 사원내역에서 부서코드와 직무코드가 null이 아닌 사원 대상으로
--              부서코드별, 직무코드별 사원수, 총연봉, 평균연봉, 최대연봉, 최소연봉을 조회하시오.
--              (조회순서는 부서코드 기준 오름차순, 직무코드 기준 오름차순으로 정렬)
-- 조회형태
--  부서ID   사원수  직무ID    총연봉         평균연봉    최대연봉   최소연봉
--   80       5    SA_MAN   61000           12200     14000    10500


---------------------------------------------------



-- [Quiz 3-4-4] 사원내역에서 부서코드와 직무코드가 null이 아닌 사원 대상으로
--              부서코드별, 직무코드별 사원수, 총연봉, 평균연봉, 최대연봉, 최소연봉을 조회하시오.
--              단, 평균연봉이 7000이상인 대상을 조회하시오.
--              (조회순서는 부서코드 기준 오름차순, 직무코드 기준 오름차순으로 정렬)  
--  부서ID   사원수  직무ID    총연봉         평균연봉    최대연봉   최소연봉
--   80       5    SA_MAN   61000           12200     14000    10500


---------------------------------------------------
