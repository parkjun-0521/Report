- 0405  
- 5주차 이론

(웹에서 데이터 전송은 무조건 String 으로 온다. )

- 태그를 합칠 때 같은 태그가 있으면 그 태그끼리 충돌이 발생한다.
- 이 태그의 충돌을 방지하는것이 '접두어'(네임스페이스) 이다. 
- 액션태그사용 시 '접두사'는 중복 태그의 충돌을 방지하기 위해 써주는 것이 좋다.

- 액션태그 
  - <접두사:태그명 속성"속성값"/>    => 접두사 == 네임스페이스 
  
  - XML 스타일의 태그 
    - <jsp:태그명 속성="속성값"/>
    EX) <jsp:include page="sub.jsp"/>
  
  - 액션 태그에서 매개변수 지정 
    - <jsp:태그명 속성="값">  
                매개변수 지정 
      </jsp:태그명>
      
    EX) <jsp:include page="includesub.jsp" >
            <jsp:param name="weeks“ value="52" />
        </jsp:include>
        
- 액션태그 6가지 종류 
  ★ forward 
  ★ include
  - getProperty
  - sertProperty 
  - userBean
  
- include 액션태그
  - 포함시킬 페이지의 처리 결과를 현재 페이지에 포함 시킴 
  - <jsp:include page="로컬URL" fiush="true"/>
  - flush : 포함시킬 페이지의 처리 결과를 삽입하기 이전에 현재 페이지가 지금까지 버퍼에 저장한 내용을 출력함 

- 지시자 include를 사용할 시 변수 중복 에러가 발생 

- 액션태그 처리과정 
  - 메소드나 함수처럼 처리가 된다. 
  - PPT 4장 39p
  
- forward 액션 태그 
  - JSP 페이지 내에서 forward 태그를 만나면 forward 태그가 있는 현재 페이지의 작업은 모두 중지 되고
  - 출력 버퍼에 있는 모든 내용을 버리고 forward 태그가 지정한 다른 페이지로 모든 제어를 이동 
  
- 스크립트릿 
  - <jsp:declaration> : 선언문 ( <%@   %> ) 
  - <jsp:scriptlet>   : 스크립트릿 ( <%   %> ) 
  - <jsp:expression>  : 표현식 ( <%=   %> ) 

- 내부 객체 ( 3개는 배울 예정 ) 
  - request
  - response
  - session
  
- 내부객체란?
  - 스크립트 요소에서 내부 객체와 동일한 변수명은 선언할 수 없음 
  - <%! int out=0; %>  => 사용불가 
  
- 내부객체의 공통 메소드
  - setAtrribute(key, value)
  - getAttributeNames()
  - getAttribute(key)
  - removeAttribute(key)
  
- JSP 페이지 입출력 관련 내부 객체 
  - request
  - response
  - out
  
- request
  - setCharacterEncoding(String env)    : 요청 페이지에 env의 인코딩 방법을 적용 
  - getParameter(String name)           : name의 용청 인자 값을 반환, 없으면 null 반환, 만일 값이 여러 개이면 첫 번째 값만 반환 
  - getParameterValues(String name)     : 지정한 name의 요청 인자 값을 문자열 배열로 반환, 없으면 null을 반환 
  - getParameterNames()                 : 모든 인자의 이름을 Enumeration으로 반환 

- 내부객체 예제1 
  - 파라미터는 대소문자를 구별한다. 

- Post 방식, Get 방식 
  - Post방식 
    - <input> 태그의 입력 내용을 페이지 요청으로 서버로 전송함 
    - 장점 : HTTP 헤더 속에 감춰서 전송되므로 특벼란 도구를 사용하지 않는 한 보이지 않음 
           : 전송되는 데이터 양에 한계가 없음 
    - 단점 : 특별하게 정보를 유지하지 않을 경우, 새로 고침에 의해 만료된 페이지 메시지를 출력함 
    
    - 보안이 필요한 로그인 정보나, 회원 정보 등의 개인 정보 전송에 많이 사용 
    
  - Get방식 
    - <input> 태그의 입력 내용을 URL을 통해서 서버로 전송
    - 단점 : 이름과 값 형태로 URL이 그대로 전송되므로 다른 사용자에게 그대로 노출
           : 4,096 바이트까지만 전송이 가능
    - 장점 : 새로 고침을 하거나 URL을 복사하여 다른 브라우저에서도 동일한 문서 보기가 사능함 
    
    - 주로 포털 사이트에서 검색어 전달 등 보안에 신경쓰지 안아도 되는 곳에서 많이 사용 
    - http://localhost:8080/ch05/a.jsp?strID=apple&pwd=1234
    - ' ?strID=apple&pwd=1234&gender=man  ' 이 형식 외우기 ( 시험 예상 ) 
    - 각 파라미터는 & 로 연결 , 띄어쓰기는 + 로 연결 
    
============================================================    
    
키설정 => 이동 로직을 바꿔야 가능 ( 이 부분은 생각 좀 해봐야 할 듯 )  		=
웹뷰 동기화 	=> 일단 얘들이 막아둠 					=
	   	=> 카메라로 비춰서 연동하는 방법 생각 중  			=
									=
카메라 3인칭 1인칭 전환 => 보류 						=
오큘러스 연동  => 이건 일단 오큘러스 퀘스트2 를 사야됨 599,000원 		=
									=
채팅시 점프 막기 등 버그 수정 						=
UI 개선 => 지금 하는 중 ( UI 이벤트, 애니메이션 ) 				=
캐릭터 아바타 적용 => 이건 되긴 한데 좀 쉽지 않을 듯 				=
									=
============================================================

자 아바타 변경하는 법을 생각해봅시다.

DB에서 뽑기로 뽑은 아이템의 정보를 받아 옵니다. 

아이템 정보 이름이 h 라고 해봐 

그러면 유니티 아바타의 value에 이름을 h로 선언 

그리고 받아온 아이템의 개수 만큼 버튼을 생성 ( 이건 팀방 생성하는 버튼과 동일한 방식으로 생성 ) 

그 아이템 버튼을 누르면 아이템의 value를 가져와서 

if( value가 h 이면 ) 
	모자를 활성화 해라 
else if ....

이런 식으로 하면 되지 않을까 일단은 생각 해봄 

버튼을 눌렀을 때 그 버튼의 value와 같은 아이템을 캐릭터에서 활성화 

그 value의 이름과 아이템의 이름이 같아야함 그래서 

아이템을 활성화를 함 
============================================================
