- 0412
- 6주차 이론 

★ request 내부 객체 
  - 7장 p.37 
    - get 방식의 한글 처리 URL 알아두기 
    - 값 중간에 공백이 있으면 URL에 + 로 표기가 된다. ( ex) 이름 변수에 "홍 길 동" 을 저장하면 URL에 홍+길+동 으로 표시 )

  - URL : HTML에서는 모든 주소 ( http://localhost:8080/myapp/ch07/a.jsp )
  - URI : 원래는 URL을 포함하는 큰 개념 
          HTML 에서는 hhttp, 포트번호 제외한 주소 ( /myapp/ch07/a.jsp )

  - 7장 p.40
    - 메소드 정리 알아두기 
    - int getServerPort : 서버의 포트를 반환 

    - 메타 정보 ( 메타 데이터 ) : 일반적으로 데이터에 관한 구조화된 데이터로

    - 알아 둬야할 것 
    - getPatameter    : 무조건 알고 있어야 한다. ( 파라미터 값을 받는 것 ) 
    - getRequestURI   : 요청에 사용된 URL로 부터 URI를 반환합니다.
    - getRequestAddr  : 클라이언트의 주소를 반환합니다
    - getHeader       : HTTP 요청 헤더에 지정된 name의 값을 반환합니다.
  
★ response 내부 객체 
  - 클라이언트의 요청에 대한 응답을 보내기 위해서 응답 관련 데이터를 저장하는 객체 
  ★ sendRedirect : 지정된 URL로 요청을 재전송합니다.
  
  - Cache를 사용하지 않는 예제 
    - Resopnse.setHeader("Pragma", "no-cache");   // 캐쉬를 사용하지 않겠다. 
   
  - 클라이언트가 response1.jsp로 sendRedirect를 하고 
  - 서버가 response1_1.jsp을 가지고 클라이언트에게 '너 값을 다시 보내줘' 라고 요청한다. 
  - 따라서 URL에는 response1_1.jsp의 주소가 남는다. 

★ out 내부객체 
  - jsp 페이지의 결과 출력을 위한 출력 스트림 
  - 출력과 버퍼링에 관련된 주요 메소드를 제공 
  - void flush() : 현재 출력 버퍼의 내용을 flus하여 클라이언트로 전송합니다.
  
- application 내부객체 
  - 웹 어플리케이션 단위는 : 프로젝트 개수 ( jsp 파일은 웹 페이지를 말한다 )
  - 서블릿 또는 웹 어플리케이션에서 유지 관리하는 외부 환경 정보를 나타내는 객체 
  - 서버의 정보와 자원 그리고 이벤트 로그 같은 정보 제공 
  
  - String getRealPath(url) : URL를 로컬 파일 시스템으로 변경하여 반환합니다. 
  - void log(massage)       : 로그 파일에 message를 기록합니다
  
- pageContext 내부 객체 
  - PPT 7장 p.56
  - 현재 JSP 페이지의 Context를 나타내는 객체 
  - 하나의 프로젝트가 웹 어플리케이션이라면  pageContext는 하나의 웹 페이지를 둘러싸고 있는 정보를 뜻함 
  
- page 내부 객체 
  - JSP 페이지 그 자체를 나타내는 객체 
  - 변환된 서블릿 객체 
  - JSP 페이지 내에서 this를 사용하여 참조 

- config 객체 
  - Servlet이 초기화 될 때 설정한 환경 정보를 접근할 수 있는 객체 
  
- execption 내부 객체 
  - 개발자가 JSP 페이지에서 발생한 예외를 처리하는 페이지를 지정한 경우 에러 페이지에 전달되는 예외 객체 
  - toString() : 에러 실체의 클래스명과 에러 메시지를 반환합니다.
  - <%@ isErrorPage="true" %> 를 써줘야한다. 
  
  
- 가장 중요한 것 
  - Servlet 과 JSP의 관계 이게 가장 중요하다. ( 중간고사에 무조건 나옴 ) 
  - 서로의 차이점을 꼭 알고 있기 
  - JSP : HTML이 메인이고 사이사이에 Java를 끼워 넣는 방식이라 배우기 쉽지만 Servlet보다 속도가 느리다.
  - Servlet : 메인이 Java고 사이사이에 HTML 코드가 들어가서 배우기 어렵다 
  
  - 프로그램은 JSP로 짜고 실행은 Servlet으로 바껴서 실행이 된다.
  - JSP의 생명주기 
  JSP가 서블릿으로 변환되어서 컴파일되서 class 파일을 만들고 메모리에 업로드가 되고 
  init, destroy 과정을 거쳐서 실행이 된다. 
  
  
  
  
  
  
  
  
  
  



- 
