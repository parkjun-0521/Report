0315(수)

- 2주차 
- 웹 프로그래밍의 이해 

- WWW
  - World Wide Web 
  - 팀 버너스 리 가 1989년에 제안하여 개발된 정보 공유 방안 
  - 전 세계를 연결한 거미줄과 같은 인터넷 망에서의 정보의 공유

- 웹의 중요한 특징 두가지 
  - HTML ( HyperText Mark-up Language )
  - HTTP 통신 프로토콜 
  
- 웹은 <a></a> ( 하이퍼링크 태그 )가 있기때문에 웹을 많은 사람이 사용하는 것 

- 웹 구조 
  - 클라이언트-서버 구조 
  - 웹 브라우저가 있는 클라이언트가 자료를 요청하면, 웹 서버가 있는 서버는 요청에 응답 
  - 웹 클라이언트가 자료를 요청할 때 HTTP 규격을 맞춰서 보냄
  - HTTP 프로토콜 => 간단하고 사용하기 쉽다. 따라서 누구나 구현하기 쉽다는 특징이 있다. 
  - 소스코드를 공개하여 모두가 사용할 수 있도록 함 
  
- 웹 동작 
  - 요청 : 클라이언트에서 서버로 정보를 요구하기 위해 보내는 메시지 ( GET방식, POST방식 ) 
  - 응답 : 요구된 메시지에 대한 응답 메시지 ( HTML, 이미지 등) 
  
  - 클라이언트가 웹 서버로 정보를 보내는 방식이 GET, POST 전송방식이 있다.  

- 웹 서버 
  - 역할 : 웹 서버는 웹의 HTTP 프로토콜을 사용하여 클라이언트의 요청에 응답을 하는 프로그램 
  - 웹 서버 종류 : 아파치, IIS, 톰캣 
  
- 정적 웹 페이지 
  - 사용자가 웹 페이지를 요청했을 경우에 서버에 저장된 페이지를 그대로 클라리언트에게 제공 
  - 어떤 사용자라도 같은 내용의 페이지를 볼 수 있음 
  - 서버에 있는 문서가 수정되지 않는 한 항상 같은 웹 문서 응답 
  - 한번 실행될때 런타임중에는 변하지 않는다.
  - 서버에 있는 값이 수정되기 전까지 항상 같은 값만 응답
  
- 동적 웹 페이지
  - 사용자가 웹 페이지를 요청했을 경우 서버에서 실시간으로 해당 작업을 처리해 클라이언트에게 제공 
  - 사용자마다 각기 다른 내용의 페이지를 볼 수 있음 
  - 시시각각 변화하는 데이터를 반영하는 페이지 ( ASP, PHP, JSP 등의 서버 스크립트 언어 사용 ) 
  - 런타임중에도 값이 변한다. 
  - 대표적으로 게시판 프로그램이 있다. 
  
- 웹 어플리케이션 
  - 실시간으로 변화하는 데이터로 웹 페이지를 생성하는 어플리케이션
  - 보통 스크립트 언어로 작성 
  - 웹프로그래밍 = 웹 어플리케이션 개발 = 동적 웹 페이지 제작 

- 웹 프로그래밍의 이해 
  - 스크립트 : 컴퓨터 프로그래밍에 있어서 어떤 한 프로그램이라기 보다 '어떤 특정한 일'을 수행하는 부분 
  - 서버 측 스크립트
    - 웹 서버에서 실행되는 스크립트로 서버 측에서 통적인 컨텐츠를 생성 
    - ASP, PHP, JSP 등 
  - 클라이언트 측 스크립트 
    - 클라이언트인 사용자의 웹 브라우저에서 실행 
    - Javascript, VBScript
  
- 웹 어플리케이션 실행 순서 
  - 1. 웹 브라우저는 웹 서버에 웹페이지를 요청 
  - 2. 웹 서버는 웹 어플리케이션을 실행하여 그 결과를 웹 브라우저에 응답한다. 
  - 2.1 웹 서버는 PHP, ASP, JSP 등을 사용하여 웹 어플리케이션을 처리 
  - 3. 웹 브라우저는 웹 서버로부터의 응답 결과를 출력한다. 

- 웹 클라이언트 프로그래밍 
  - 웹 클라이언트 스크립트 언어 
    - 클라이언트 측 스크립트 언어 
    - 웹 브라우저 상에서 직접 수행이 가능한 스크립트 언어로 HTML 문서에서 태그로 표현할 수 없는 로직 처리를 담당
    - 언어 ( VBScript, JavaScript ) 
  
- 웹 서버 프로그래밍
  - CGI 방식 
    - 동적인 웹서버 구축을 위하여 처음으로 개발 
    - 현재는 사용되지 않는 방식임 
    - 사용자의 증가에 따라 성능이 저하됨 ( 많은 요청이 있을 경우 대량의 트래픽이 발생한다. ) 
    - 웹 서버가 직접 실행하는 것이 아닌 호출하는 것이다. 
    - CGI는 동적 컨텐츠 구동시 프로세스 방식으로 실행 
    - ex : 100번의 동적 컨텐츠의 응답에 CGI 프로그램은 100개의 '프로세스' 생성 => 성능 저하 
    
    - CGI 방식을 사용 장점 
      - CGI 규약만 지키면 어떤 언어라도 사용가능 ( C, Perl 등등 ) 
    - 요청 하나당 프로세스 하나 
  
  ★ 어플리케이션 서버 방식 ( 확장 CGI 방식 ) 
    - 매번 프로세스를 생성하는 방식이 아니고 동일한 프로그램에 대해서 하나의 프로세스를 생성한 후 여러개의 스레드 방식으로 요청 처리 
    - 메모리 사용량 및 프로세스 관리 부하 감소로 시스템 부하를 줄임 
    - ASP, PHP, Sevlet, JSP 등등 
    
    - 웹 서버가 처리 내용을 어플리케이션 서버로 전달 -> 어플리케이션 서버가 프로그램을 스레드 방식으로 실행 
    - 어플리케이션 서버도 하나의 프로세스이다. 따라서 스레드 방식으로 처리 
    - 프로세스는 한개인데 여러 스레드가 생성됨 
    - 요청 하나당 스레드 하나 
    
    - 웹 서버 프로그래밍 언어 
      - ASP, ASP.NET
      - PHP
      - Servlet ( Spring MVC ) 
      - JSP 
      - Python ( Django )
      - Jacascript ( Node.js )

- 웹 서버 프로그래밍 
  - PHP 
    - C 언어문법 유사 
    - 소스가 공개되어 있음 
    - 배우기 쉽다. 
    
  - 서블릿 ( Servlet ) 
    - 실행 코드 방식의 특징 
    - Java 코드 안에 HTML 태그가 혼재 ( 코드의 가독성이 떨어짐 )
    - 효율성이 떨어짐 
    - 순수 자바로 웹 프로그래밍을 하는 것
    
    - 서블릿은 컴파일 언어 방식이다 따라서 속도가 JSP에 비해서 빠르다. 
    - 단점으로는 프로그래밍하기 어렵다. 
    
  - JSP
    - 스크립트 코드 방식의 특징 
    - HTML 태그 사이 중간에 동적인 컨텐츠 생성을 담당할 Java 코드가 들어가 있는 형태 
    - 사용자 정의 태그로 기능 확장이 가능
    
    - 서블릿에 비해 프로그래밍하기 편하다. 
    - 인터프리터 언어다 보니깐 서블릿보다 실행속도가 느리다. 
    
  - Spring MVC
    - Spring에서 제공하는 웹 모듈로 세가지 요소 ( Model, View, Controller ) 를 사용하여 유연하고 확장성 있는 웹 어플리케이션 개발 지원
    - 프로그램의 기본 틀을 미리 만들어준다. 
    
    - 자바 엔터프라이즈 개발을 편하게 해주는 오픈소스 경량급 애플리케이션 프레임워크 
      - 애플리케이션 프레임워크 : 어플리케이션 개발의 전 과정을 빠르고 편리하고 효율적으로 만들어 줌 
      - 단순한 개발툴과 기본적인 개발환경으로 엔터프라이즈 개발에 필요한 주요 기능을 갖춘 어플리케이션 개발이 가능 
      - 자바로 엔터프라이즈 개발을 편하게 만들어 줌 
        - 엔터프라이즈 개발의 복잡함을 제거 
        - 실수하기 쉬운 로우레벨 기술에 신경을 많이 안쓰게 함 
        - 비지니스 로직을 빠르고 효과적으로 구현하게 함 
        
- JSP란? ( Java Server Page ) 
  - 웹 프로그래밍 언어중 하나 
  - J2EE API의 한 부분
  - 동적 페이지를 생성하기 위한 서버측 스크립트언어
  - 자바언어를 기반 
    - 객체지향 
    - 플랫폼 독립적
    - 네트워크 지향적 
    - 보안성
    - 멀티스레드 

- Servlet 
  - 완전한 자바파일의 형태 
  - 자바 코드 안에 HTML 태그를 포함하는 방식 
  


 

