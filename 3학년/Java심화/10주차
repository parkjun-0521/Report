
- 0515
- 11주차 필기 

- 스레드와 운영체제 
  - 스레드 ( Thread ) 
    - 운영체제에 의해 관리되는 하나의 작업 혹은 태스크 ( 스레드 = 태스크 ) 
    - 스레드와 태스크는 바꾸어 사용해도 무관 
    
  - 멀티스레딩
    - 여러 스레드를 동시에 실행시키는 응용프로그램을 작성하는 기법 
    
  - 스레드 구성 
    - 스레드 코드 
      - 작업을 실행하기 위해 작성한 프로그램 코드 ( 개발자가 작성하는 부분 ) 
    - 스레드 정보 
      - 스레드 명, 스레드 ID, 스레드의 실행 소요 시간, 스레드의 우선 순위 등 
      - 운영체제가 스레드에 대해 관리하는 정보 
     
- 멀티태스킹과 멀티스레딩 
  - 멀티프로세싱
    - 하나의 응용프로그램이 여러 개의 프로세스를 생성하고, 각 프로세스가 하나의 작업을 처리하는 기법
    - 각 프로세스 독립된 메모리 영역을 보유하고 실행
    - 프로세스 사이의 문맥 교환에 따른 과도한 오버헤드와 시간 소모의 문제점 
    
  - 멀티스레딩 
    - 하나의 응용프로그램이 여러 개의 스레드를 생성하고, 각 스레드가 하나의 작업을 처리하는 기법 
    - 하나의 응용프로그램에 속한 스레드는 변수 메모이, 파일 오픈 테이블 등 자원으로 공유하므로, 문맥교환에 따른 오버헤드가 매우 작음 
    - 현재 대부분의 운영체제가 멀티스레딩을 기본으로 하고 있음 
    
- 자바 스레드와 JVM
  - 자바 스레드 
    - JVM에 의해 스케쥴되는 실행 단위의 코드 블럭
    - 스레드의 생명주기는 JVM에 의해 관리됨 ( JVM은 스레드 단위로 스케쥴링 ) 
    
  - JVM과 자바의 멀티스레딩
    - 하나의 JVM은 하나의 자바 응용프로그램만 실행 
    - 응용프로그램은 하나 이상의 스레드로 구성 가능 
    
- 스레드 만드는 2가지 방법
  - java.lang.Thread => 클래스를 상속받아 스레드를 작성 
  - java.lang.Runnable => 인터페이스를 구현하여 스레드 작성 
  
- Thread 를 상속 받아서 스레드 만들기 
  - 반드시 void start() 메소드를 사용하여 실행해줘야함 
  - 무엇을 할 것인가 는 void run() 메소드에서 작성  
  
  - 스레드 객체를 만들고 
  - 객체.start() 로 스레드를 실행 
  - 이후 동작 부분은  void run() 메소드에 작성 
  
  - 
  
  
  
  
  
  
  
  
  
  
  
  
  
