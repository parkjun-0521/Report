- 0410 
- 6주차 이론 

- 팝업 다이얼로그 
  - 사용자에게 메시지를 전달하거나 문자열을 간단히 입력받는 용도 
  - jOptionPane 클래스를 사용
  
- 입력 다이얼로그 
  - 한 줄을 입력 받는 다이얼로그 
 
- 확인 다이얼로그 
  - JOptionPane.showConfiemDialog()
  - 사용자로부터 Yes/No 응답을 입력 받는 다이얼로그 
  
-  메시지 다이얼로그 
  - showMwssageDialog()
  - 단순 메시지를 출력하는 다이얼로그 
  
- 그리기 
  - 스윙 페인팅 기본 
    - 모든 컴포넌트는 자신의 모양을 스스로 그린다
    - 모든 스윙 컴포넌트는 자신의 모양을 그리는 paintComponent() 메소드 보유 
    
  - public void paintComponent(Graphics g)
    - 스윙 컴포넌트가 자신의 모양을 그리는 메소드 
    - JComponent의 메소드 
    - 언제 호출 되는가 
      - 컴포넌트가 그려져야 하는 시점마다 호출 
      -  크기가 변경되거나, 위치가 변경되거나, 컴포넌트가 가려졌던 것이 사라지는 등 

- paintComponent()의 오버라이딩과 JPanel
  - paintComponent(Graphic g)의 오버라이딩 
    - 개발자가 JComponent를 상속받아 새로운 컴포넌트 설계
    - 기종 컴포넌트의 모양에 변화를 주고자 할 때 
    
  - JPanel
    - 비어있는 컨테이너 
    - 개발자가 다양한 GUI를 창출할 수 있는 캔버스로 적합 

- JLable을 이용한 이미지 그리기 
  - 장점 : 이미지 그리기 간편 용이 
  - 단점 : 이미지의 원본 크기대로 그리므로 이미지 크기 조절 불가 

- Graphics의 drawImage()로 이미지 출력 
  - 장점 : 이미지 일부분 등 이미지의 원본 크기와 다르게 그리기 가능 
  - 단점 : 컴포넌ㅌ로 관리할 수 없음, 이미지의 위치나 크기 등을 적절히 조절하는 코딩 필요 
  
- repaint() 
  - 모든 컴포넌트가 가지고 있는 메소드
  - 자바 플랫폼에게 컴포넌트 그리기를 장제로 지시하는 메소드 
  - repaint()를 호출하면, 자바 플랫폼이 컴포넌트의 paintComponent() 호출
- repaint()의 호출이 필요한 경우
  - 개발자가 컴포넌트를 다시 그리고자 하는 경우

