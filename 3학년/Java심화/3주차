0320 - 3주차

- 이벤트 기반 프로그래밍 
  - 이벤트의 발생에 의해 프로그램 흐름이 결정되는 방식 
    - 이벤트를 처리하는 루틴 실행 
  - 배치 실행 
    - 프로그램 개발자가 프로그램의 흐름을 결정하는 방식 
  - 이벤트 종류 
    - 사용자의 입력 
    - 센서 입력 
    - 다른 응용프로그래밍 

- 이벤트가 처리괴는 과정 
  - 이벤트 발생 
    - 마우스 움직임, 키보드 입력 등 
  - 이벤트 객체 생성 
    - 현재 발생한 이벤트에 대한 정보를 가진 객체 
  - 응용프로그램에 작성된 이벤트 리스너 찾기 
  - 이벤트 리스너 실행 
    - 리스너에 이벤트 객체 전달 
    - 리스너 코드 실행 
    
- 이벤트 객체 
  - 발생한 이벤트에 관한 정보를 가진 객체 
  - 이벤트 리스너에 전달됨 
    - 이벤트에 대한 상황을 파악할 수 있음   
  - 이벤트 객체가 포함하는 정보 
    - 이벤트 종류, 이벤트 소스 
    - 좌표, 컴포넌트 좌표 
    - 버튼, 마우스 클릭 횟수 
    - 키 코드값 
    - 체크박스, 라디오 박스 
  - 이벤트 소스를 알아 내는 메소드 
    - Object.getSource()
      - 발생한 이벤트의 소스 컴포넌트 리턴 
      - Object 타입으로 리턴하므로 캐스팅하여 사용 
      - 모든 이벤트 객체에 대해 적용 

- 이벤트 객체, 이벤트 소스 ( 3주차 10쪽 알아두기 ) 

- 리스너 인터페이스 
  - 이벤트 리스너 : 이벤트를 처리하는 자바 프로그램 코드
  - 자바의 리스너들은 인터페이스로 만들어져 있다. ( 따라서 인터페이스 안에 있는 메소드를 다 구현시켜줘야 한다. ) 
  
- 이벤트 리스너 인터페이스 ( 3주차 12쪽 알아두기 )

- 이벤트 리스너 클래스를 작성 ( 인터페이스 작성 ) -> 클래스 안에 구현 -> 이벤트 리스너 등록 ( 객체 등록 ) 
- 이벤트 리스너 작성법 3가지 
  - 독립 클래스로 작성 
    - 따로 클래스가 만들어 진다.
  - 내부 클래스로 작성 
    - 내부 클래스는 $가 이름 앞에 붙어서 만들어 진다. 
  - 익명 클래스로 작성 

- 어댑터 클래스 
  - 이벤트 리스너 구현에 따른 부담을 덜어주기 위한 것 
  - 
