- 0522
- 11주차 필기 

- 멀티스레드 프로그램 작성시 주의점 
  - 다수의 스레드가 공유 데이터에 동시에 접근하는 경우 ( 공유 데이터의 값에 예상치 못한 결과 발생 가능 ) 

- 스레드 동기화 
  - 동기화란?
    - 스레드 사이의 실행순서 제어, 공유데이터에 대한 접근을 원활하게 하는 기법 
  - 멀티스레드의 공유 데이터의 동시 접근 문제 해결 
    - 공유 데이터를 접근하는 모든 스레드의 한 줄 세우기 
    - 한 스레드가 공유데이터에 대한 작업을 끝낼 때까지 다른 스레드가 대기하도록 함 
    
  - 자바의 스레드 동기화 방법 2가지 
    - synchronized 키워드로 동기화 블록 지정 
    - wait()-notify() 메소드로 스레드의 실행 순서 제어 
    
- synchronized 키워드 
  - 스레드가 독점적으로 실행해야 하는 부분( 동기화 코드 )을 표시하는 키워드 ( 임계영역 표기 키워드 ) 
  - synchronized 블록 지정 방법 ( 메소드 전체 혹은 코드 블록 ) 
  
  - synchronized 블록이 실행될 때 
    - 먼저 실행한 스레드가 모니터 소유 
    - 모니터를 소유한 스레드가 모니터를 내놓을 때까지 다른 스레드 대기 
  
- 자바의 입출력 스트림 
  - 입출력 장치와 자바 응용프로그램 연결 
    - 입력 스트림 : 입력 장치로부터 자바 프로그램으로 데이터를 전달하는 객체 
    - 출력 스트림 : 자바 프로그램에서 출력 장치로 데이터를 보내는 객체 
  
  - 특징 
    - 입출력 스트림 기본 단위 : 바이트
    - 단방향 스트림, 선입선출 구조
    
  - 문자 스트림 
    - 문자만 입출력하는 스트림
    - 문자가 아닌 바이너리 데이터는 스트림에서 처리하지 못함
    - 문자가 아닌 데이터를 문자 스트림으로 출력하면 깨진 기호가 출력 
    - 바이너리 파일을 문자 스트림으로 읽으면 읽을 수 없는 바이트가 생겨서 오류 발생 
    
  - 바이트 스트림
    - 입출력 데이터를 단순 바이트의 흐름으로 처리
    - 문자 데이터 든 바이너리 데이터든 상관없이 처리 가능 
    
-  JDK의 바이트 스트림 클래스 계층 구조 
  - InputStream ( 하위 클래스가 InputStream 으로 끝난다. )
  - OutputStream ( 하위 클래스가 OutputStream 으로 끝난다. )
  
- JDK의 문자 스트림 클래스 계층 구조 
  - Reader
  - Writer
  
- 스트림 연결 
  - 여러개의 스트림을 연결하여 사용할 수 있음 
  - InputStreamReader() 클래스를 사용함 

- 텍스트 파일을 읽기 위해 문자 스트림 FileReader 클래스 이용 
  - 파일 입력 스트림 생성 
    - FileReader fin = new FileReader("c:\\text.txt");
  - 파일 읽기 
    - fin.read()
  - 파일 닫기 
    - fin.close();
    
- 파일 입출력과 예외 처리
  - 스트림 생성 동안 : FileNotFoundException 발생 가능 
  - 파일 읽기, 쓰기, 닫기를 하는 동안 : IOException 발생 가능 


