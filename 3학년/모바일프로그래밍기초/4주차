- 0324
- 4주차 수업  ( 집가서 안드로이드 스튜디오 설치 ) 
★ 시험 방식은 코드를 보고 이게 무슨 코드인지 해석하는 문제로 나올 가능성이 크다. 

- 프로젝트 불러올때 에러가 발생할 시 
- invalidate cashes.. 를 해서 불러오기 ( 이전 파일을 다 날리고 가져오는 것 ) 

- 단위 
- dp : 화면 단위
- sp : 글씨 단위 

- 안드로이드 스튜디오 프로젝트 구성 ( ★은 필수적으로 알고 있으면 좋다 ) 
★ manifests
  - AndroidManifest.xml - 애플리케이션 수행에 필요한 필수 정보 ( 어플리케이션에 관련된 필수 명세서가 들어가 있음 ) 
                        - 구성 요소가 반드시 포함되어 있어야 프로그램이 돌아간다. 
★ java ( 기능 구현 )
  - 소스코드
  - androidTest : 안드로이드 모듈을 테스트하기 위해 필요 
  - test : 자바 모듈쪽 테스트를 하기 위해 필요
  - generated : 오류를 잡기 위해 필요 
  
★ res ( 자원 ) 
  - 각종 리소스 저장 폴더
  - 레이아웃, 그림, 문자열 등의 리소스 저장
  - drawable: 그려질 수 있는 객체 (이미지)
  - layout : 레이아웃 (화면 디자인), 화면 구성 형태, 관련 내용 저장
  - mipmap : 앱 아이콘이 배치
  - values : 문자열, 배열, 색상, 스타일 등
  
- Gradle Script
  - 빌드 스크립트
  - 외부에서 다른 사람들이 만든 것을 여기에 작성하기도 한다. 
  
- AndroidManifest.xml ( PPT 1장 59쪽 ) 
  - 애플리케이션의 이름, 버전 등의 정보를 저장 
  - 애플리케이션에 적재된 모든 컴포넌트에 대하여 기술하는 파일 
  - 애플 사용시 권한 등 이런것을 여기에 작성 한다.
  
- 레이아웃 : layout/ ....xml 
  - 사용자 인터페이스 작성
  - androidx : 시간이 지나고 나온 안드로이드 기능들을 추가 
  
  - match_patent : 부모 객체 기준으로 ( 부모 객체의 크기가 MAX, 부모크기가 200*200 이면 최대 200*200 까지 사용 가능 )  
  - wrap_content : 필요한 만큼 ( 내가 필요한 만큼만 사용을 하겠다 )
  - 이렇게 크기를 만드는 이유 : 사용자들의 폰의 크기도 다르고 각 폰의 해상도도 다르기 때문에 위와 같은 크기로 지정을 한다. 
  - <(꺽세) 다음에 나오는게 태그이다. 

- 안드로이드 기본 레이아웃 실행 코드 설명 
  - AppCompatActivity 를 상속 받음 
  - setContentView(R.layout.activity_main) : 눈에 보이는 뷰를 설정해라 ( 괄호 안에 있는 레이아웃을 가져와라 ) 
 
=======================================================================================================================
실습 관련
=======================================================================================================================  
- 






  
- 
