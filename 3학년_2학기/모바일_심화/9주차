- 1106
- 9주차 필기 

- 데이터베이스 생성 
- SQLiteOpenHelper
  - 데이터베이스의 오픈을 실행하기 위해서 작성 
  - 생성자에서 데이터베이스 파일명과 버전을 지정 ( super(context, DATABASE_NAME, null, DATABASE_VERSION); ) 

- SQLiteDatabase 

- onUpgtade()
  - 데이터베이스의 버전관리
  - 테이블 구조 변경 등이 발생한 경우 

- Insert()
  - 데이터를 조작하기 위한 방법들 가운데 하나 
  - Public long insert(테이블 명, null 처리 컬럼명, 컬럼별 값을 넣은 ContentValues 객체);

- 코드 분석 
  - 데이터베이스 컬럼 생성 시 
    - 첫번째 컬럼은 무조건 _id로 만들어야 한다.  
    - static final String KEY_ROWID = " _id"; ( 컬럼 이름 정의 )

  - super(context, DATABASE_NAME, null, DATABASE_VERSION);
    - DATABASE_VERSION : 버전은 아무거나 써도 상관은 없다. 단, 바뀌었을 때 DB가 바뀌었다는것을 확인하기 위해 사용한다. 

  - onCreate() 
    - 테이블을 생성한다. 
    - db.execSQL( CREATE_TABLE );

  - onUpgrade()
    - DB가 변경이될 때 메소드가 실행이된다. 
    - DATABASE_VERSION 이 변경이 되었을 경우 메소드가 실행된다. 

  - ContentValues initeialValues = new ContentValues();
    - 이 객체를 이용하여 DB를 처리한다. 

   - fetchAll()
     - DB에 있는 모든 값을 가져오는 메소드 

- rawQUery(), query() 메소드
  - rawQUery : 메소드를 생성해 select 구문을 직접 실행 
  - query() : 메소드 인자로 각 부분의 값을 넘겨 실행 

- MainActivity 로직 
  - onResume() 에 DB기능을 구현한 이유 : DB의 데이터가 변경되어 갱신이 되어야 하기때문에 onResume 메소드에 구현 
  - onResume() 에서 db를 open 하는 로직을 작성 
  - onCreate()에 구현 시 onPause()된 후 데이터가 갱신되지 않는다. 

  - 안드로이드에서 데이터베이스 조회결과는 : 'Cursor' 라는 객체가 가진다. 

  - mAdpater = new SimpleCuroerAdapter ( this, R.layout.data_row, c, from, to, 0 );
    - Cursor Adapter 밑에 속해있는 메소드
    - c 라는 Cursor 에서 커서를 가져와서 from 에 있는 DB값을 뿌려줘라 근데 to라는 구조에 맞춰서 데이터를 넣어줘 

  - list01.setAdapter(mAdapter);

  - onPause()
    - dbAdapter.close() : DB를 닫는 로직 
    - Pause에서도 DB를 닫아줘야한다. 
    - onResume() 메소드에서 open() 로직을 구현한 이유는 onPause()에서 db를 close하기 때문에 다시 돌갔을 경우 db를 열기위해 

  - 생신된 커서를 이용해서 리스트를 갱신 
    - Cursor c = dbAdapter.fetchAllNotes();
    - mAdapter.changeCursor(c);
    - mAdapter.notifyDataSetChanged();

    - 어댑터는 DB를 물고 있다. DB를 통째로 물고 있는것이 아닌 쿼리를 물고있는 것이므로 
    - Cursor가 물고 있는 데이터 정보를 받아와서 실시간으로 정보를 갱신한다. ( notifyDataSetChanged ) 


