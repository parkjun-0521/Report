- 1216
- 기말고사 필기 

- 6주차(Part8 PPT) p.10, p.16 ( 아누이노 시간관리, 입터럽션 ) 각각 한문제 
- 10주차(Part10 PPT) p.9~12 ( 1문제 나옴 ) , p.33 (온습도 센서 1문제 )
- 실기 ( 10주차(통신모듈) p.43 )  

=================================================================================================
- Part6. 디지털 핀 제어하기 

- 디지털 제어 
  - 디지털 출력 
    - 5V on/off -> digitalWrite() 
  - 디지털 입력 감지 
    - 5V on/off -> digitalRead() 

- 아날로그 핀 제어 
  - 아날로그 출력 
    - PWM -> analogWrite()
  - 아날로그 입력 출력 
    - 0~5V -> analogRead()

- 디지털 핀 
  - 0~13번 핀 사용사능 ( UNO 보드 기준 ) 
  - 0V( off, LOW, 0 ), 5V( on, HIGH, 1 ) 출력/입력 가능 

- 디지털 핀 제어 방법 
  - 디지털 핀 초기화 : pinMode(pinNumber, mode) // mode에는 LOW 또는 HIGH
  - 디지털 핀 입력 체크 : digital(pinNumber) 
  - 디지털 핀 출력 : digital(pinNumber, state)

- 특정 디지털 핀 
  - 0, 1 번 핀은 Rx(0), Tx(1) 핀으로 예약 
  - 3,5,6,9,10,11 핀은 PWM 핀
  - 10, 11, 12, 13 핀은 SPI 통신 핀으로 예약 

- pinMode(2, OUTPUT)
  - 2번 핀 설정 

- digitalWrite(2, HIGH) // 2번핀 설정 한것의 LED를 켜라 
- delay(1000)           // 1초의 딜레이 시간을 줘라 
- digitalWrite(2, LOW)  // 2번핀 설정 한것의 LED를 꺼라 

- 피오조 스피커 
  - tone( 핀번호, 음계에 해당하는 정수 ) 
  - 정수의 맞는 소리가 피에조 스피커로 나오게 된다.  
  - 중간에 delay를 추가하여 원하는 노래를 출력할 수 있다. 
=================================================================================================
- Part7. 아두이노 시간 관리 ( 기말고사 시험2문제 확정 ) 

- 아두이노 시간 관리   
- 아두이노의 특징 
  - 아두이노는 single process, single thread 
  - 프로그래밍 된 일련의 작업을 순서대로 실행 
  - delay() 함수의 덫 

★ millis 함수 
  - 아두이노의 시간 측정 함수
  - 밀리초 단위로 현재 시간을 리턴 
  - 아두이노 시작 루 지난 시간 
  - unsigned long(4byte)
  - micros() : 마이크로 초 단위의 시간 측정 
  
  - unsigned long 변수명 = millis();
  - if( 변수명 > 시간변수1 + 1000 ) { } // 현재 시간 시간변수 + 1초 보다 클때 

- Interrupt ( 인터럽트 ) 
  - 인터럽트가 발생할 경우 setup, loop 안의 코드 수행을 잠시 정지 
  - 인터럽트용으로 에약된 작업을 수행하고 복귀 

★ 인터럽트 사용시 주의사항
  - ISR 함수는 이력 파라미터, 리턴값이 없음 
    - 무조건 void 함수명() 형태 
  - ISR 안에서는 delay() 사용 불가 
  - millis() 사용해도 값이 증가하지 않는다. 
  - delayMicroseconds()는 사용가능 
  - 시리얼 통신 데이터를 읽을 경우 값이 소실됨 
  - ISR 안에서 수정되는 전역 변수는 volatile로 선언 
  - ISR 루틴을 최대한 짧고 빠르게 수정되어야 함 

- 초음파센서와 거리 
  - 초음파가 나오는 곳 : TRIG
  - 초음파를 받는 곳 : ECHO
  - 초음파의 4개의 핀 : VCC, TRIG, ECHO, GND 
  - 측정 범위 : 2cm ~ 4m
  - 측정 각도 : 15도
  - 사용 전압 : 5V
  - 사용 전류 : 15mA

=================================================================================================
- Part8. 디지털, 아날로그 입출력 복습 

- 버저 
  - 단순한 소리를 내는 스피커 같은 장치 
  - 간단하게 소리를 생성 가능
  - 아두이노 디지털 핀에 연결해서 디지털 출력으로 제어 가능 

- 초음파센서 
  - 초음파 발신 후 수신까지 걸리는 시간 측정 
  - 음파의 속도를 이용해 거리 계산 
  - 거리가 멀수록 면적이 커져야 인식 가능 

- 서보 모터 
  - DC 모터 
    - 가장 흔한 모터, 입력 전류 방향으로 회전방향 제어 
    - 고회전에 유리 

  - 서보 모터
    - 보통 0~180 사이를 움직이며 위치를 정확히 제어가능 
    - RC카의 방향타, 로봇 관정 등 회전각 제어에 적합 
    - 아날로그 출력 기능 사용 ( PWM )
    - Servo 라이브러리로 제어 

  - 스텝 모터   
    - 회전 방향 뿐 아니라 회전 각을 정밀히 제어할 수 있음 
    - DC 모터와 서보 모터의 장점을 합친 모터 

- 마이크사운드 감지 센서 
  - 핀 순서 ( A0, GND, 5V ) 
  
=================================================================================================
- Part9. 아두이노 모듈 통신 방법, 핀 정리 

- 아두이노 모듈 간 통신 방법 
  - 패러럴과 시리얼 
    - 시리얼은 직렬화를 거쳐 한 라인으로 통신 
    - 패러럴에 비해 저속이지만 통신 라인을 절약 

  - 시리얼의 동기식과 비동기식 
    - 동기식 : Clock 라인을 이용해 데이터 전송 타이밍을 맞춤 ( I2C, SPI 통신이 대표적 )
    - 비동기식 : Clock 라인 없이 양측이 미리 합의된 클럭 사용 ( Serial 통신이 대표적 ) 

- 기본 통신 방법 
  - 아두이노의 디지털 핀을 이용해 전기적 신호로 데이터 송수신
  - 1:1 통신 
  - 모르스 기호 
  - 가장 간단한 형태의 시리얼 통신 

  - 기본 통신 방법 - 온습도 센서 
    - 온도와 습도 데이터를 주기적으로 전송 
    - 아두이노 디지털 핀을 이용해 수신

- Serial 통신 
  - Hardware Serial 
    - 아두이노 시리얼 통신이 대표적 
    - 2개의 통신 라인이 크로스 되어 약속 ( Rx(0), Tx(1) )
    - 비동기식 : Clock 라인 없이 양측이 미리 합의된 클럭 사용 ( 두 장치의 클럭 간격을 미리 맞춰줘야 함 ) 
    - 클럭 동기화 문제 
      - 두 장치가 사용하는 클럭 생성기의 주파수가 틀린 경우 
      - 문제 방지를 위해 start/stop 비트 추가 
    - 아두이노간 Serial 통신이 가능 
    - 블루투스 모듈, WiFi 모듈 등 광범위하게 사용 

    - 소스코드 업로드, 디버깅의 목적으로 사용이 된다. 

  - Software Serial 
    - Built-in 된 0,1 번 핀 외에 다른 디지털 핀으로 Serial 통신
    - 일반적인 시리얼 모듈들은 이 방법을 사용 

- I2C 통신 
  - 대표적인 동기식 시리얼 통신 
  - 클럭 핀과 데이터 핀이 서로 연결 
  - 1:N 통신 
  - 연결이 간단, 데이터 1 라인으로 양방향 통신을 하므로 상대적으로 느림 

  - 아두이노가 Master, 다른 기기가 Slave
  - Slave 기기들은 고유의 식별 ID를 가진다.
  - 가속도/자이로 센서, 디스플레이 모듈 등 

  - 통신 구조 
    - 메시지 기본 구조 : 주소 프레임과 데이터 프레임 사용 
    - 통신 시작 조건 : SCL -> SDA   
    - 주소 프레임 : 통신 시작되면 주소 프레임부터 전송, 수신할 slave 주소를 표현 

- SPI 통신 
  - 고속 1:N 통신을 위한 프로토콜 
  - Input, Output 통신선이 분리되어 있어 빠름
  - Master - Slave 구조 
  
  - 통신 핀 구조 
    - MISO : 마스터로 데이터 전송하는 핀 
    - MOSI : 마스터에서 디바이스로 전송
    - SCK : 데이터 전송의 동기화를 맞추기 위해 마스터가 생성하는 clock pulse
    - SS : 마스터가 특정 디바이스를 활성화/비활성화 하기 위해 사용되는 디바이스 상의 핀 

  - 데이터 송신 
    - 클럭 라인을 이용해서 비동기식 시리얼 통신의 문제점 해결 
    - 클럭 라인의 동작에 맞춰서 데이터 라인 동작 

  - 데이터 수신 
    - Slave 장치가 데이터를 보내느 방법 필요 
    - Master에서 Slave 장치를 위해 클럭을 생성해서 보내줌 
    - MISO 라인 사용 

  - SPI 통신 예제 -> 이더넷 모듈 

- I2C-LCD 코딩 핵심 
- LiquidCystal_I2C Icd( I2C 주소 , 16, 2 );

- 물감지 센서 코딩 
- int sensor = A0;
- int led = 11;
- void setup() {
    pinMode(11, OUTPUT);            // led를 출력으로 설정 
  }
  void loop(){
    int data = analogRead(sensor);  // 센서 입력값 data 변수에 저장    
    int light = map(data, 0, 1023, 0, 255); // 신호 변환 
    analogWrite(led, light);        // led에 light 값 출력 
  }

=================================================================================================
- Part10. 디스플레이 모듈  ( 기말고사 2문제 확정 ) 

- 동기식 시리얼과 비동기식 시리얼 
  - 동기식 시리얼 
    - 데이터 라인을 클럭 라인의 동작과 동기화 
    - 시리얼 라인에 함께 연결된 기기들이 클럭을 공유 
  - 비동기식 시리얼 
    - 외부 클럭 시그널의 도움 없이 동작 
    - 데이터 전송 속도 고정 

- Charactar LCD 
  ★ 회로 연결 
    - VCC -> 5V 
    - GND -> GND
    - SDA -> A4
    - SCL -> A5

  - 코드 
    - lcd.init()                      // LCD 초기화 
    - lcd.createChar(0, bell)         // 아이콘 등록 
    - lcd.print("Hello world...");    // 문자열 출력 
    - lcd.setCursor(0, 1);            // 커서 위치 설정 
    - Serial.available()              // Serial 통신 버퍼 확인 
    - lcd.clear();                    // LCD 화면 지움 
    - lcd.write(Serial.read());       // 시리얼 버퍼에서 1byte 읽은 뒤 LCD로 출력 

- 온습도 센서 
  - 핀 순서 ( VCC, A0, GND )

=================================================================================================
- Part11. 통신 모듈  ( 실기 1문제 유형 확정 ) 

- 통신 모듈의 종류와 특징 
- 유선 통신 
  - USB / USB Host
    - PC 또는 모바일 장치와 USB 연결 가능 
    - USB host shield / OTG Cable 이용 
    - 안정적, 신뢰성 높은 통신 방법 
    - 사용하기 쉬움 
    - 1:1 연결 

  - 이더넷 모듈 
    - 인터넷 직접 연결 가능 
    - Server / Client로 동작 
    - 공유기에 연결되어 비교적 쉽게 사용가능 
    - 공간상의 제약 
    - 마이크로 컨트롤러 성능상의 한계 고려 필요 

- 무선 통신 
  - 적외선 통신 
    - 신호 생성울 위한 표준이 있으며 
    - 아두이노 용 표준 라이브러리도 존재
    - 회로가 간단 
    - 근접거리, 저용량의 데이터 전송에 적합 

  - RF 통신 
    - 단순히 데이터만 송수신하는 모듈, 복잡한 프로토콜이 정의된 모듈 
    - 지속 근거리 통신용으로 적합 
    - N:N 통신 가능 

  - Zigbee
    - 복잡한 프로토콜, 부족한 레퍼런스 
    - 상대적으로 진입 장벽이 높은 통신 방법 
    - 1:N, N:N 고속 Mesh 네트웍 구성에 유리 

  - 블루투스 
    - 근거리 무선통신 
    - 모바일 장치와 연동에 장점
    - 비교적 빠른 속도, 저전력 
    - 비컨 활용 가능, 1:N 피코넷 구성 가능 

  - WiFi  
    - 근거리 무선통신
    - 인터넷 직접 연결 가능 
    - 무선 AP로 동작 가능 
    - HTTP 서버 구현 가능 

- 블루투스 모듈 
  - Serial 지원 블루투스 통신 모듈 

- 실습 유형 예제
  - OLED 연결 방법 
    - I2C 기준 
    - SDA -> (A4)
    - SCL -> (A5)
    - VCC -> (5V)
    - GND -> (GND) 
    - RST -> (D9) ( 5pin 일때 )
  - 위의 핀에 연결해야 하는 데 오른쪽에 빈칸 만들어 두고 무엇이 들어가는지 적어라 형식의 문제 



















