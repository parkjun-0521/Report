- 1005
- 5주차 필기 

★ Serial Monitor
- USB  Serial 통신
  - Serial 통신을 사용 
  - Serial 통신은 2개의 데이터 통신용 핀을 사용 ( Tx, Rx )             -> 중요 : T와 R이 통신을 하려면 T-R, R-T 방식으로 통신을 해야한다. ( 서로 다른 것으로 연결해야됨 ) 
  - 아두이노 UNO의 경우 digital 0번, 1번 핀이 이 용도로 예약되어 있음 

- Serial Monitor
  - 아두이노와 데이터를 주고 받기 위해 사용하는 툴 
  - 주로 디버깅, 데이터 입력을 위해 사용 
  - Serial Monitor를 이용한 디버깅 메시지를 보는 것이 거의 유일한 디버깅 방법이므로 중요 

- 사용법 
  - 보드 종류, COM 포트 선택 
  - 도구 -> 시리얼 모니터 
  - Output에 해당하는 부분 
  
- 구성 
  - 메시지 입력창 
  - 수신 메시지 표시창 
  - 통신 속도 설정 
    - 기본 960bps

- 초기화 로직 
  - Serial.begin(9600);

- 메시지 출력 
  - Serial.println("Text");

★ 브레드 보드 사용법 
- GND  -> 보드의 가장 위에 2둘 중에서 첫번째줄   
- 5V   -> 보드의 가장 위에 2둘 중에서 두번째줄

- 위에 2줄은 가로 방향으로 이어짐
- 중앙 4줄은 아래 방향으로 이어짐 ( 즉 전류가 한방향으로 흐른다고 생각하면됨 )
  ★ LED 기준 선이 긴쪽이 +, 짧은 쪽이 - 
  ( 한방향으로 흐를 시 당연히 한쪽으로 연결하면 켜지지 않는다. 서로 다른 줄에 +, - 를 연결하고 위줄의 두줄과 +, - 로 연결해주어야 한다. )

- 아두이노는 디지털과 아날로그 입력으로 구분되어 있다.
- 아날로그는 강약을 주면서 전기의 입출력을 제어할 수 있다. 

- 디지털 2~13중에 원하는 곳에 빨간색 점퍼선을 연결 
- 파란색은 무조건 GND
- LED 구별법 : 짧은 부분과 긴 부분을 알수 있는데 짧은 부분이 빨간색즉(LED 내부를 확인하였을 때), 디지털 신호에 연결한다. 
- 긴 부분의 파란색은 GND 아무곳이나 연결하면 된다. 

- 아누이노 IDE 에서 
- File -> Examples -> Basics -> Blink 에서 코드 수정 ( 여기에서 8은 내가 연결한 디지털 신호 번호이다. ) 
  void setup() {
    // initialize digital pin LED_BUILTIN as an output.
    pinMode(8, OUTPUT);
  }
  
  // the loop function runs over and over again forever
  void loop() {
    digitalWrite(8, HIGH);  // turn the LED on (HIGH is the voltage level)
    delay(1000);                      // wait for a second
    digitalWrite(8, LOW);   // turn the LED off by making the voltage LOW
    delay(1000);                      // wait for a second
  }


입출력 ( 푸시버튼 ) 
- 버튼을 눌렀을 때 접선이되고 
- 버튼을 땠을 때 연결이 끊어지는 방식 
