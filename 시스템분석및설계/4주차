시험문제로 자바의 상속은 어떻게 쓰는가 ( 시험에 나올 가능성이 있음 )
  - extends 를 사용 

자바의 class는 Package 안에 작성 
자바에서 class 문을 가져다 쓰기 위해서는 import를 해야한다.

- 자바에서 상속을 하려면 extends 를 사용한다. 

자바에서의 상속(Inheritance)
  - 특수화 (Specialization)
    - topdown 관점에서 봤을 때 특수화 
    - 상세한 객체 타입들로 세분화 될 수 있다
  - 일반화 (Generalization)
    - bottomup 관점에서 봤을 때 일반화 
    - UML에서 보편적으로 사용한다 
  
  - 용어
    - 슈퍼 클래스와 서브 클래스 
    - 부모 클래스와 자식 클래스
    - 베이스 클래스와 유도(파생) 클래스 
    
- 자바에서는 public class 이름이 file 이름이 된다. 
- file 이름이 되기때문에 public class는 하나만 존재 
- main 함수를 갖는 class는 반드시 public class 여야 한다. 
- object class가 java의 최상위 class이다.
- 자식은 부모클래스의 메소드를 실행 가능 


UML에서의 상속에는 자식 UML에 부모 메소드를 적지 않는다

★ 상속의 이점 
- 확장성이 좋다
- 유지보수성이 좋다 
- 재사용성이 좋다 
- 이해가 용이하다
- 추상화가 높아진다
- 대치성이 가능하다 

- 상향형변환 ( upcasting )
  - 상속의 환상적 장점
  - 슈퍼클래스의 객체는 서브 클래스의 객체로 대치 가능 

★ 오버로딩 과 오버라이딩 
  - 오버로딩 : 한 클래스 안에서 중복된 함수를 사용하는것. 단, 중복된 함수는 매개변수가 달라야한다.
  - 오버라이딩 : 상속이 무조건 있어야 하고, 부모와 자식이 서로 중복된 함수를 사용하는 것을 말한다.
 
 
- 자바에서 추상클래스 만들기 위해서는 abstract이 필요하다 

- 추상 클래스 
  - 여러 클래스들에 중복적으로 존재하는 행위를 하나의 공통된 위치로 뽑아내는 장치
  - 각 클래스들의 공통적인 요소를 일반화 한것 ( ex) 악기는 타악기, 현악기, 관악기 등등 있다. 악기라는 것이 추상 클래스이다 ) 
  - 실제 객체는 만들수 없다. 
  
- 구체화 클래스 
  - 추상 클래스를 구체적으로 나누어 객체를 만들수 있는 클래스 ( ex) 악기는 타악기, 현악기, 관악기 등등 있다. 타악기, 현악기 등 이런것이 구체화 클래스 ) 
  - 서브 클래스들은 추상 클래스의 행위를 상속받아서 서브 클래스의 목적에 맞도록 재정의 할 수 있다.
  
- 추상 클래스 목적 
  - 모든 클래스들에 공통된 인터페이스를 생성하기 휘함 
  - 공통된 인터페이스는 서로 다른 클래스에서 서로 다르게 표현될 수 있다. 
  - 모든 서브 클래스의 메소드들은 동적 바인딩 메커니즘을 통해서 호출가능하다. 
  
- 두가지 용도 
  - 공통된 행위에 대한 full 함수 구현 
  - 공통된 행위에 대한 템플릿은 특정 서브 클래스 메소드들에 의해 정의 된다. 
  
- 추상클래스 이점
  - 높은 재사용성 
  - Subclass 들에 개한 IS-A 관계 강화 
  - 이기종 객체들의 수집 
  - 유지보수성 향상 
  - 확장성 향상 

- UML 에서는 '추상'클래스를 IsAdstrac를 체크 하여 이텔릭체로 바꿔서 표시 
- UML 에서는 '가상'클래스를 IsAdstrac를 체크 하여 이텔릭체로 바꿔서 표시 
- 부모가 IsAdstrac이면 자식은 무조건 그 메소드를 구현해야 한다. 
- IsAdstrac가 무조건 하나이상 있어야 추상클래스 이다

- 추상클래스도 상속이 있어야 한다. 
