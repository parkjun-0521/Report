클래스는 객체의 타입이다. 
객체는 클래스의 인스턴스이다.
  - 객체는 메모리를 가지고 있는 실체이다. 
  
생성자 
- 객체가 생성될 때 초기화 목적으로 실행되는 메소드 
- 객체가 생성되는 순간에 자동 호출 
- 객체는 new라는 연산자로 메모리에 객체가 생성됨 

생성자 특징 
- 생성자 이름은 클래스 이름과 동일 
- 생성자는 여러개를 작성 가능 
  - 이때 매개변수의 개수가 다르거나 매개변수의 타입이 달라야한다. 
  - 이것을 오버로딩이라고 한다. 
- 객체 생성자는 객체 생성시 한번만 호춯 
- 생성자의 목적은 객체 생성 시 초기화 
- 생성자는 리턴 타입을 지정할 수 없음 

- 자바는 캡슐화의 특징 때문에 생성자를 사용하여 값을 초기화 

기본생성자 
- 매개변수가 없고, 실행코드가 없어 아무 일도 하지 않고 단순 리턴하는 생성자 
- public Circle() { } => default생성자 

클래스에 생성자가 하나도 선언되어 있지 않을 때 
- 컴파일러에 의해 기본 생성자 자동으로 생성 

클래스에 생성자가 선언되어 있는경우
- 컴파일러는 기본 생성자를 생성해 주지 않는다.

this
- 객체 자신에 대한 레퍼런스 
- 컴파일러에 의해 자동 관리 
- htis.맴버 형태로 멤버를 접근할 때 사용 
- this는 자기 자신을 의미한다.


this()
- 같은 클래스의 다른 생성자 호출
- 생성자 내에서만 사용가능 
- 생성자 코드의 제일 처음에 있어야 함 
 
 기본 데이터 타입 
 -  primitive 데이터 타입 라고 한다.
 
=========================================================================
자바의 객체 배열 
- 객체에 대한 래퍼런스를 원소로 갖는 배열 

자바의 객체 배열 만들기 3단계
- 1. 배열에 대한 레퍼런스 변수 선언 
- 2. 레퍼런스 배열 생성 
- 3. 배열의 각 원소 객체 생성 


- 레퍼런스값이 저장될 수 있는 5개의 공간이 생김 
- 갹체를 저장하는 것이 아님!!!!
ex ) Circle[] c;                              => 1
     c = new Circle[5];                       => 2
     
     => 여기 까지는 레퍼런스만 생성 
     
     for ( int i = 0; i < c.length; i++ )     => 3
          c[i] = new Circle(i);
          
     => 여기까지 해야 객체 배열이 생성이 되는것 이다. 
     
