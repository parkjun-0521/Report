자바에서는 s를 붙여서 복수형으로 쓴다

- static 
객체를 생성하지 않더라고 클래스에 접근이 가능 
static 으로 선언하면 프로그램이 종료될 때 같이 사라진다. 

객체지향언어 
- 캡슐화 
- 다형성 
- 상속 

상속 
- 코드의 중복성을 제거 
- 클래스를 간결하게 구현 가능 
- 재사용 과 확장을 통한 소프트웨어 생성산 향상 
- 클래스 관리 용이 


상속 선언
- extends 키워드로 선언 
- 부모 - 슈퍼 
- 자식 - 서브 
- 유도 - 파생( derived class ) 

5장의 9쪽 서브 클래스 객체의 모양 알아두기 

자바의 상속 
- 클래스 다중 상속이 안됨 
  - 자바는 인터페이스의 다중상속만 가능 
  
- 모든 자바 클래스는 묵시적으로 Object클래스를 상속받음 


슈퍼클래스의 대한 서브 클래스 접근 
- private
- 디폴트 ( default , package ) 
- public 
- protected
  - 상속 되는 서브 클래스에게 허용 
  - 같은 패키지의 모든 클래스에게 허용 
  
호출과 실행 
- 슈퍼클래스 생성자와 서브클래스 생성자모두 실행 
  - 서브 클래스의 생성자 먼저 호출, 
  - 서브 클래스의 생성자는 실행 전 슈퍼 클래스 생성자 호출 
- 실행 순서 
  - 슈퍼 클래스의 생성자가 먼저 실행된 후 서브 클래스의 생성자 실행 

super()
- 서브 클래스에서 명시적으로 슈퍼 클래스의 생성자 선택 호출 
- 반드시 서브 클래스 생성자 코드의 제일 첫번째 줄에 와야됨 


업 캐스팅 
- 서브 클래스의 레퍼런스를 슈퍼 클래스 레퍼런스에 대입 
- 수퍼 클래스 레퍼런스로 서브클래스 객체를 가리키게 되는 현상 
- 객체의 형변환 
- 부모클래스는 자식클래스에는 접근할 수 없다. 


다운 캐스팅 
- 슈퍼클래스 레퍼런스를 서브 클래스 레퍼런스에 대입 
- 업캐스팅 된 것을 다시 원래대로 되돌리는 것 
- 반드시 명시적 타입 변환 지정 
- PPT.30 쪽 확인 







