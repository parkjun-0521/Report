- 0311
- 2주차 실습 

- 파일 처리 시스템 
  - 데이터베이스가 개발되기 이전에 데이터 처리 및 저장, 관리 방식 

  - 파일 처리 시스템의 문제 
    - 데이터 종속 문제 
    - 데이터 중복 문제 
    - 무결성 훼손 문제 
    - 동시 접근 문제 

- 데이터베이스 관련 용어 
  - 데이터 
    - 사실을 나타내는 수치 / 값 

  - 데이터베이스 (DB)
    - 특정 조직의 업무 처리를 위해 시스템에서 사용되는 데이터의 집합 

  - 데이터베이스 관리 시스템 (DBMS)
    - mariaDB, oracle 등등을 의미한다. 
    - 일종의 프로그램을 말한다. 
    - 데이터의 일관성, 무결성 등의 문제가 발생하지 않도록 관리 기능을 수행하는 소프트웨어 

  - 데이터베이스 시스템 (DBS)
    - 데이터베이스 + DBMS
    - 정보를 저장, 관리하여 사용자에게 제공하는 프로그램의 총칭 

- 데이터베이스 모델링
  - 개념적 데이터 모델링 
    - 실세계의 대상과 관련성을 데이터 모델을 사용하여 '논리적으로 추상화'하는 단계 
    - 가장 처음에 하는 모델링 단계 
    - 대표적으로 ERD 가 있다. ( 개체-관계 다이어그램)
    - Backer 표기법 <= ERD와 비슷하다. 
      - IE_Backer.png 확인 
    - DB.png 에서 3개로 뻗어 있는게 있고 한개로 뻗은게 있는데 
      - 3개는 1개이상의 값이 있다는것을 의미하고 1개는 반드시 한개를 가지고 있다는 의미 

    - 외부 스키마가 나온다. 

  - 논리적 데이터 모델링 
    - 데이터베이스 관리 시스템이 데이터를 운용 및 관리하는 모델에 따른 '데이터베이스의 스키마를 생성'하는 단계

    - 내부 스키마가 나온다. 

  - 물리적 데이터 모델링 
    - 실제 데이터베이스 관리 시스템에 맞도록 정의된 개체들을 구현 
    - 추상적으로 기술된 모든 사항이 대부분 구현

    - 물리 스키마가 나온다.

- 데이터 모델 
  - 모델링 
    - 사물의 형태를 형상화하는 일 
    - 모델을 보고 닮게 만드는 일  
    - '객체'를 찾는다.

  - 데이터 모델 
    - 데이터의 관계, 접근과 그 흐름에 필요한 처리 과정에 관한 추상화된 모현 
    - '관계'를 설정하는 한다.
    - 'ER 다이어그램'을 그린다. 

  - 데이터 모델링 
    - 데이터 모델을 가지고 직접 만드는 것을 말한다. 
    - 물리적 스키마가 나온다. 
    
    - 데이터 개체들을 분석하고, 개체들 사이의 연관성을 정의 하는 작업 

- 정규화, 정규형 
  - '정규화'를 하면 '정규형'이 나온다. 
  - 데이터베이스의 '재구성' 불필요한 데이터 제거 
  - 삽입/갱신/삭제 시 발생하는 이상현상 방지 

  ★ 정규화의 장점 
    - 데이터 정확성 및 일관성을 유지 
    - 입력, 수정, 삭제 성능 향상 => 정규화를 잘하면 항상 빨라진다. 
    - '검색 성능'은 '향상' 될 수도 있음 => 단, 정규화를 정말 잘하면 검색이 더 어려워진다. 

  - 중복되어 있는 값이 있을 경우 무결성이 유지될 수 없다. 
  - 중복 값이 있는 경우는 삽입/삭제/갱신이 쉽게 이뤄지지 않는다. 
  - 유일한 값은 한번만 저장해라. 
  
  ★ 정규화를 하는 이유 중 가장 큰 것은 
    - '중복되어 있는 값을 제거하기 위해서 하는 것이다'. 
    - 값은 하나만 사용해라!! 

- 제1 정규화 ( 1NF )
  - 모든 속성은 '반드시 하나'의 '값'만 가져야 한다. 
  - 테이블의 컬럼이 '원자값'을 갖도록 테이블을 분해 

- 제2 정규화 ( 2NF )
  - 엔터티의 모든 일반 속성은 반드시 모든 주식별자에 종속되어야 한다. 
  - 완전 함수 종속을 만족하도록 테이블을 분해 

  - 기본키의 부분집합이 결정자가 되어선 안된다는 것을 의미 
  - 기본키 중에 특정 컬럼에만 종속된 컬럼이 없어야 된다는 것 
  - 기본키를 제외한 컬럼이 결정자가 되어서는 안된다. 
  - 즉, 기본키로만 결정을 할 수 있도록 분해하는 것을 말한다. ( 완전 함수 종속 ) 

- 제3 정규화 ( 2NF ) 
  - 주식별자가 아닌 모든 속성 간에는 서로 종속될 수 없다. 
  - 이행적종속을 없애도록 테이블을 분해 

  - 이행적종속 ( A->B->C->A 를 참조하는 것을 말한다. ) 
  - 이행적종속을 없애는 것을 말한다. 
    
- BCNF 

- 사용자 요구사항 
  - 필요성 
    - 시스템의 개당이 되는 업무를 분석하여 정보 시스템의 데이터베이스가 데이터를 저장 및 운용할 수 있는 구조 개발 

  - 역할 
    - 구축하려는 데이터베이스 시스템이 제공하는 기능 정의 
    - 일반적인 요구 수용이 아닌, 사용자와의 합의를 통해 도출하고 기록 
    - 프로젝트 수행 과정 중 또는 수행 환료 후 발생하는 분규에 개한 책임 소재 규명 

- 사용자 요구사항 분석 결과 
  - 기능 요구사항 
    - 시스템이 수행해야 하는 행위를 구체화 한 것 
    - 입력과 출력 및 그들 사이의 처리과정 
    - 소프트웨어가 가져야 하는 기능적 속성 

  - 비기능 요구사항
    - 행위와 관련된 제약사항 
    - 시스템이 가져야 하는 성능, 신뢰성, 편의성, 보안 및 인증체계, 시스템 특성, 설계 제약사항 등의 요구사항 

- ER 모델 
  - 개념적 모델링 단계에서 사용되는 대표적인 데이터 모델 
  - 실세계를 속성들로 이루어진 개체와 개체 사이의 관계로 정형화 시킨 모델 

  - 개체 집합 
    - 현실세계의 유형 또는 무형의 대상 

  - 관계 집합 
    - 개체와 개체 사이의 연관성

  - 속성 
    - 개체와 관련된 상세 정보 

    - Backer에서 O 와 * 의 차이 
      - * : 어떤 값을 반드시 저장해야하는 속성 
      - O : 어떤 값이 존재할 수도 있고 존재하지 않을 수도 있는 경우 

- ER 모델링 
  - 관계 
    - 개체가 수행하는 어떠한 행위 
    - 개체와 연관된 업무 프로세스 

  - 관계 정의 
    - 식별 관계 
      - 부모 데이블의 기본키가 자식 테이블의 기본키로 전이되는 관계 
      - 부모 테이블의 키값이 자식 테이블에서도 키값 

    - 비식별 관계 
      - 부모 테이블의 기본키가 자식 테이블의 일반 속성으로 전이 되는 관계 
      - 부모 테이블에서 키값이 자식 테이블에서는 있어도 되고 없어도 되는 속성 

- 제약 조건 
  - Primary Key : 기본키 지정, Unique와 Not Null 특성 
  - Foreign Key : 외래키 지정, 참조 컬럼 정의 ( 반드시 부모먼저 생성하고, 삭제할 때는 자식의 Foreign Key 부터 삭제해야 한다. ) 
    - CASCADE 조건 사용시 강제로 삭제할 수 있다. 
  - Not Null : Null이 될 수 없는 컬럼 지정 
  - Unique : 동일한 컬럼값을 가질 수 없음 지정 
  - Auto Increment : 레코드가 추가될 때 자동적으로 속성값이 1부터 1씩 증가되어 입력 ( 중간 값이 삭제되어도 속성값이 상관없이 증가 )
  - Check : 컬럼값이 특정 조건 준수 여부 지정 ( 값을 넣을 때 조건에 맞는 값만 넣을 수 있다. ) 

- SQL의 개념 
  - 관계형 DBMS의 데이터를 관리하기 위해 설계된 비절차적 언어 
  - 자연어와 매우 유사하고 간단, 명료한 것이 특징 

- 데이터 정의 언어 (DDL)
  - 데이터베이스 객체를 관리하는 SQL 명령어 집합 
  - CREATE 생성 , ALTER 수정 , DROP 삭제 , RENAME
  - TRUNCATE 를 하면 ROLLBACK 할 수 없다. => TRUNCATE 테이블이 삭제되도 구조는 남아있는 것 

- 데이터 조작 언어 (DML)
  - 데이터를 조작하는 SQL 명령어 집합 
  - INSERT 삽입 , UPDATE 수정 , DELETE 삭제 , SELECT 검색 

- 데이터 제어 언어 (DCL)
  - 사용자 권한을 통제하는 SQL 명령어 집합 
  - GRANT 부여 , REVOKE 회수 

  - DDL언어로 ROLL 규칙을 만들어 GRANT로 부여할 수 있다. 
  - ROLL 은 DDL에서 DREATE로 미리 만들어야 사용할 수 있다. 

- 트랜잭션 제어 언어 (TCL) 
  - 논리적인 작업 단위를 묶어서 DML에 의해 조작된 결과 제어 
  - COMMIT : 저장 같은것
  - ROLLBACK : 마지막으로 COMMIT한 부분으로 돌아간다.
  - SAVEPOINT : 저장한 위치로 돌아갈 수 있도록 SAVE 지점을 만드는 것 ( ROLLBACK으로 이동할 수 있다 ) 

  - oracle의 left 조인은 오른쪽 테이블에 (+), right 조인은 왼쪽 테이블에 (+)
  - 



























