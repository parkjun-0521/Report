- 0412
- 6주차 필기 

- 오라클 기본 세션 256
- lapper에서 service로 넘어갈 때 DB와 Connection을 끊어 버린다. 

- connection pool
  - Spring - DB
    - 채널을 미리 만들어 놓고 할당 해준다 
    - 할당이 끝나면 채널을 없애는게 아니라 비활성화?
    - Object Pooling 이랑 비슷하다고 생각하면 됨

- DB는 frameWork 포함이 된다. 
- 따라서 DB는 root에 설정한다. 

- root
  - <context:component-scan base-package="kr.ac.seoil" />
  - kr.ac.seoil 파일들을 관리한다. 
  - 정확히는 @component 가 있는 파일들을 관리
  - 카톡에 사진 확인 

- DB 연동 
  - <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
  - 무슨 DB와 연결 하겠냐? oracle DB와 연결하겠다. 

  - <property name="jdbcUrl" value="jdbc:oracle:thiin:@localhost:1521:XE"/>
  - jdbc 인거 알겠다. 무슨 jdbc냐 oracle jdbc를 사용하겠다. 
  - 현재는 local 이니깐 localhost 에 1521 포트에 연결하겠다. 

  - <property name="username" value="HR"/>
	- <property name="password" value="1234"/>
  - 연결 했으니깐 로그인 해야겠지 

  - <property> : 값을 넘길 때 사용한다. ?? 

- <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"/>
	</bean>

  - bean 의 id는 내가 원하는 id로 지정할 수 있다. 
  - destroy-method="close" => bean이 없어질 때 DB를 끊겠다. 
  - DB 끊는 것은 Spring이 해준다. 

- <constructor-arg ref="hikariConfig"/>
  - 위 dataSource 생성할 때 hikariConfig에 접근해서 값을 가져와라 

- 책 85. 86 은 넘어갔음 

<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"/>
</bean>
- dataSource 를 위 dataSource로 id 준 곳에 담아라 
- 근데 dataSource가 hikari DB네 
- hikariConfig로 가서 DB에 접근 함 

- 위 3줄로 DB에 접근??? 맞나 비슷한듯 




