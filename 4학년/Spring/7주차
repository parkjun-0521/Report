- Spring 로딩은 2단계로 로딩을 한다.

-  

web.xml 
- context-param 부분 
  - root-context.xml 을 가져와서 server에 올린다. 
  - 따라서 DB에 접근 하는 부분을 가져오는 것 

- MVC 
  - web.xml 의 servlet 부분 
  - servlet-context.xml 을 가져와서 화면에 보여주는 부분 
  - presentation 부분 

- 따라서 지금 프로젝트에서는 root 와 servlet 에서 로딩을 하고 있다. 
  - 대부분의 셋팅을 지정해준 파일이다. 
  - root에는 DB 설정, servlet

- 모델2 방식 구조 
  - 화면을 담당하는 View 부분과 
  - 데이터를 처리하는 비즈니스 로직 부분

  - 어떤 요청이 들어오면 컨트롤러가 요청을 받고 해당하는 모델을 호출 
  - 모델은 데이터를 처리 이후 컨트롤러에게 요청에 대한 결과를 보내고 
    - 데이터는 모델에 담아서 화면에 보여주는 방식
  - 컨트롤러는 뷰에게 전송. 즉, 화면에 뿌려줌 

  - 모델은 내가 사용자에게 보여줄 데이터를 담는 곳 
  - 컨트롤러 데이터를 처히는 것? 암튼 
  - 뷰는 사용자에게 보여지는 화면 

- 같은 URL로 2개까지 만들 수 있다 
  - method 를 post 와 get 방식으로 다르게 줘서 두개를 만들 수 있다.

- 전반적인 실행 부분 
  - 톰캣이 실행되면서 우리 프로젝트의 프로그램을 로드 
  - web.xml을 로드한다. 
  - web.xml 은 root 와 servlet 부분을 로드는 하는 방식으로 되어 있다. 
  - servlet 를 로딩할 때 conponent scan이 있는데 그 부분에 있는 @controller 를 찾는다. 
  - 그 안에 request 맵핑에 있는 @RequestMapping 을 가져온다. 

  - 데이터를 모델에 담아서 return 해서 
  - view에 띄워줘야 한다. 
